
BluePill_AllON_Bitwise.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000284  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b4  080003bc  000103bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003b4  080003b4  000103bc  2**0
                  CONTENTS
  4 .ARM          00000000  080003b4  080003b4  000103bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003b4  080003bc  000103bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003b4  080003b4  000103b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003b8  080003b8  000103b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003bc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003bc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000103bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a2d  00000000  00000000  000103e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001cd  00000000  00000000  00010e12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00011028  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001ca8  00000000  00000000  00011058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000683  00000000  00000000  00012d00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007f13  00000000  00000000  00013383  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001b296  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  0001b2ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800039c 	.word	0x0800039c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800039c 	.word	0x0800039c

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b08d      	sub	sp, #52	; 0x34
 8000174:	af00      	add	r7, sp, #0
0x4001100C 		//PORTC; +0C

*///***************************************

//create pointer for RCC_APB2ENR
uint32_t *pClkCntrlReg	= (uint32_t*)0x40021018;
 8000176:	4b57      	ldr	r3, [pc, #348]	; (80002d4 <main+0x164>)
 8000178:	627b      	str	r3, [r7, #36]	; 0x24

//create ponter for PortmodeReg
uint32_t *pPortAModeLowReg=		(uint32_t*)0x40010800;
 800017a:	4b57      	ldr	r3, [pc, #348]	; (80002d8 <main+0x168>)
 800017c:	623b      	str	r3, [r7, #32]
uint32_t *pPortAModeHighReg=	(uint32_t*)0x40010804;
 800017e:	4b57      	ldr	r3, [pc, #348]	; (80002dc <main+0x16c>)
 8000180:	61fb      	str	r3, [r7, #28]

uint32_t *pPortBModeLowReg=		(uint32_t*)0x40010C00;
 8000182:	4b57      	ldr	r3, [pc, #348]	; (80002e0 <main+0x170>)
 8000184:	61bb      	str	r3, [r7, #24]
uint32_t *pPortBModeHighReg= 	(uint32_t*)0x40010C04;
 8000186:	4b57      	ldr	r3, [pc, #348]	; (80002e4 <main+0x174>)
 8000188:	617b      	str	r3, [r7, #20]

//uint32_t *pPortCModeLowReg= 	(uint32_t*)0x40011000; не используется на блюпиле
uint32_t *pPortCModeHighReg= 	(uint32_t*)0x40011004;
 800018a:	4b57      	ldr	r3, [pc, #348]	; (80002e8 <main+0x178>)
 800018c:	613b      	str	r3, [r7, #16]

//create pointer for OutRegister
uint32_t *pPortAOutReg	= (uint32_t*)0x4001080C;
 800018e:	4b57      	ldr	r3, [pc, #348]	; (80002ec <main+0x17c>)
 8000190:	60fb      	str	r3, [r7, #12]
uint32_t *pPortBOutReg	= (uint32_t*)0x40010C0C;
 8000192:	4b57      	ldr	r3, [pc, #348]	; (80002f0 <main+0x180>)
 8000194:	60bb      	str	r3, [r7, #8]
uint32_t *pPortCOutReg	= (uint32_t*)0x4001100C;
 8000196:	4b57      	ldr	r3, [pc, #348]	; (80002f4 <main+0x184>)
 8000198:	607b      	str	r3, [r7, #4]

//Enable Clock for PORT ABC
*pClkCntrlReg |=0x1C;	//eneble PORTA-C;
 800019a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	f043 021c 	orr.w	r2, r3, #28
 80001a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80001a4:	601a      	str	r2, [r3, #0]

//Configure the mode of PORT-----------------------------------------------
//Configure Mode of PORTA
*pPortAModeLowReg	&=0x22222222;	//clear PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001a6:	6a3b      	ldr	r3, [r7, #32]
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001ae:	6a3b      	ldr	r3, [r7, #32]
 80001b0:	601a      	str	r2, [r3, #0]
*pPortAModeLowReg	|=0x22222222;	//set	PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001b2:	6a3b      	ldr	r3, [r7, #32]
 80001b4:	681b      	ldr	r3, [r3, #0]
 80001b6:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 80001ba:	6a3b      	ldr	r3, [r7, #32]
 80001bc:	601a      	str	r2, [r3, #0]

*pPortAModeHighReg	&=0x44444444;	//0x2FF22222 clear	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001be:	69fb      	ldr	r3, [r7, #28]
 80001c0:	681b      	ldr	r3, [r3, #0]
 80001c2:	f003 3244 	and.w	r2, r3, #1145324612	; 0x44444444
 80001c6:	69fb      	ldr	r3, [r7, #28]
 80001c8:	601a      	str	r2, [r3, #0]
*pPortAModeHighReg	|=0x44444444;	//0x20022222set	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001ca:	69fb      	ldr	r3, [r7, #28]
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	f043 3244 	orr.w	r2, r3, #1145324612	; 0x44444444
 80001d2:	69fb      	ldr	r3, [r7, #28]
 80001d4:	601a      	str	r2, [r3, #0]

//Configure Mode of PORTB
*pPortBModeLowReg	&=0x22222F22;	//clear	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001d6:	69bb      	ldr	r3, [r7, #24]
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4b47      	ldr	r3, [pc, #284]	; (80002f8 <main+0x188>)
 80001dc:	4013      	ands	r3, r2
 80001de:	69ba      	ldr	r2, [r7, #24]
 80001e0:	6013      	str	r3, [r2, #0]
*pPortBModeLowReg	|=0x22222F22;	//set	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001e2:	69bb      	ldr	r3, [r7, #24]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f043 3322 	orr.w	r3, r3, #572662306	; 0x22222222
 80001ea:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 80001ee:	69ba      	ldr	r2, [r7, #24]
 80001f0:	6013      	str	r3, [r2, #0]

*pPortBModeHighReg	&=0x22222222;	//clear	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 80001f2:	697b      	ldr	r3, [r7, #20]
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001fa:	697b      	ldr	r3, [r7, #20]
 80001fc:	601a      	str	r2, [r3, #0]
*pPortBModeHighReg	|=0x22222222;	//set	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 80001fe:	697b      	ldr	r3, [r7, #20]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 8000206:	697b      	ldr	r3, [r7, #20]
 8000208:	601a      	str	r2, [r3, #0]

//Configure Mode of PORTC	//no pins on PCB
//*pPortCModeLowReg	&=0x222FFFFF;	//clear
//*pPortCModeLowReg	|=0x22200000;	//set

*pPortCModeHighReg	&=0x222FFFFF;	//clear	PC13;PC14;PC15
 800020a:	693b      	ldr	r3, [r7, #16]
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	f023 435d 	bic.w	r3, r3, #3707764736	; 0xdd000000
 8000212:	f423 0350 	bic.w	r3, r3, #13631488	; 0xd00000
 8000216:	693a      	ldr	r2, [r7, #16]
 8000218:	6013      	str	r3, [r2, #0]
*pPortCModeHighReg	|=0x22200000;	//set	PC13;PC14;PC15
 800021a:	693b      	ldr	r3, [r7, #16]
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
 8000222:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000226:	693a      	ldr	r2, [r7, #16]
 8000228:	6013      	str	r3, [r2, #0]


//Enable LED (Configure PC13 as low)
*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	601a      	str	r2, [r3, #0]
*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	601a      	str	r2, [r3, #0]


//**************************************************************
//PORTA; Configure PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;PA8;!PA9;!PA10;!PA11;PA12		PA15; as HIGH
*pPortAOutReg |=0x9FFF;
 8000242:	68fb      	ldr	r3, [r7, #12]
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f443 431f 	orr.w	r3, r3, #40704	; 0x9f00
 800024a:	f043 03ff 	orr.w	r3, r3, #255	; 0xff
 800024e:	68fa      	ldr	r2, [r7, #12]
 8000250:	6013      	str	r3, [r2, #0]
//PORTA; Configure  PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;PA8;PA9;PA10;PA11;!PA12		!PA15; as LOW
*pPortAOutReg &=0x6000;
 8000252:	68fb      	ldr	r3, [r7, #12]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	f403 42c0 	and.w	r2, r3, #24576	; 0x6000
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	601a      	str	r2, [r3, #0]

//PORTB; PB1; Configure	*PB3;PB4;PB5;PB6;PB7;PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15  as HIGH
*pPortBOutReg |=0xFFF8;
 800025e:	68bb      	ldr	r3, [r7, #8]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	f443 437f 	orr.w	r3, r3, #65280	; 0xff00
 8000266:	f043 03f8 	orr.w	r3, r3, #248	; 0xf8
 800026a:	68ba      	ldr	r2, [r7, #8]
 800026c:	6013      	str	r3, [r2, #0]
//PORTB; Configure PB3;*PB4;PB5;PB6;PB7;PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15 as LOW
*pPortBOutReg &=0x0007;
 800026e:	68bb      	ldr	r3, [r7, #8]
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f003 0207 	and.w	r2, r3, #7
 8000276:	68bb      	ldr	r3, [r7, #8]
 8000278:	601a      	str	r2, [r3, #0]

//PORTC; Configure as HIGH PC13;PC14;PC15
*pPortCOutReg |=0xE000;
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f443 4260 	orr.w	r2, r3, #57344	; 0xe000
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	601a      	str	r2, [r3, #0]
//PORTC; Configure as LOW PC13;PC14;PC15
*pPortCOutReg &=0x1FFF;
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f3c3 020c 	ubfx	r2, r3, #0, #13
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	601a      	str	r2, [r3, #0]
//*************************************************************************

	/* Loop forever */
while(1){
//turn ONN the LED
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<80000; i++);
 800029e:	2300      	movs	r3, #0
 80002a0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80002a2:	e002      	b.n	80002aa <main+0x13a>
 80002a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80002a6:	3301      	adds	r3, #1
 80002a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80002aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80002ac:	4a13      	ldr	r2, [pc, #76]	; (80002fc <main+0x18c>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d9f8      	bls.n	80002a4 <main+0x134>
//turn OFF LED
	*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<80000; i++);
 80002be:	2300      	movs	r3, #0
 80002c0:	62bb      	str	r3, [r7, #40]	; 0x28
 80002c2:	e002      	b.n	80002ca <main+0x15a>
 80002c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002c6:	3301      	adds	r3, #1
 80002c8:	62bb      	str	r3, [r7, #40]	; 0x28
 80002ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002cc:	4a0b      	ldr	r2, [pc, #44]	; (80002fc <main+0x18c>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d9f8      	bls.n	80002c4 <main+0x154>
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 80002d2:	e7de      	b.n	8000292 <main+0x122>
 80002d4:	40021018 	.word	0x40021018
 80002d8:	40010800 	.word	0x40010800
 80002dc:	40010804 	.word	0x40010804
 80002e0:	40010c00 	.word	0x40010c00
 80002e4:	40010c04 	.word	0x40010c04
 80002e8:	40011004 	.word	0x40011004
 80002ec:	4001080c 	.word	0x4001080c
 80002f0:	40010c0c 	.word	0x40010c0c
 80002f4:	4001100c 	.word	0x4001100c
 80002f8:	22222f22 	.word	0x22222f22
 80002fc:	0001387f 	.word	0x0001387f

08000300 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000300:	480d      	ldr	r0, [pc, #52]	; (8000338 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000302:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000304:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000308:	480c      	ldr	r0, [pc, #48]	; (800033c <LoopForever+0x6>)
  ldr r1, =_edata
 800030a:	490d      	ldr	r1, [pc, #52]	; (8000340 <LoopForever+0xa>)
  ldr r2, =_sidata
 800030c:	4a0d      	ldr	r2, [pc, #52]	; (8000344 <LoopForever+0xe>)
  movs r3, #0
 800030e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000310:	e002      	b.n	8000318 <LoopCopyDataInit>

08000312 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000312:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000314:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000316:	3304      	adds	r3, #4

08000318 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000318:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800031c:	d3f9      	bcc.n	8000312 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800031e:	4a0a      	ldr	r2, [pc, #40]	; (8000348 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000320:	4c0a      	ldr	r4, [pc, #40]	; (800034c <LoopForever+0x16>)
  movs r3, #0
 8000322:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000324:	e001      	b.n	800032a <LoopFillZerobss>

08000326 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000326:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000328:	3204      	adds	r2, #4

0800032a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800032c:	d3fb      	bcc.n	8000326 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800032e:	f000 f811 	bl	8000354 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000332:	f7ff ff1d 	bl	8000170 <main>

08000336 <LoopForever>:

LoopForever:
    b LoopForever
 8000336:	e7fe      	b.n	8000336 <LoopForever>
  ldr   r0, =_estack
 8000338:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800033c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000340:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000344:	080003bc 	.word	0x080003bc
  ldr r2, =_sbss
 8000348:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800034c:	2000001c 	.word	0x2000001c

08000350 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000350:	e7fe      	b.n	8000350 <ADC1_2_IRQHandler>
	...

08000354 <__libc_init_array>:
 8000354:	b570      	push	{r4, r5, r6, lr}
 8000356:	2600      	movs	r6, #0
 8000358:	4d0c      	ldr	r5, [pc, #48]	; (800038c <__libc_init_array+0x38>)
 800035a:	4c0d      	ldr	r4, [pc, #52]	; (8000390 <__libc_init_array+0x3c>)
 800035c:	1b64      	subs	r4, r4, r5
 800035e:	10a4      	asrs	r4, r4, #2
 8000360:	42a6      	cmp	r6, r4
 8000362:	d109      	bne.n	8000378 <__libc_init_array+0x24>
 8000364:	f000 f81a 	bl	800039c <_init>
 8000368:	2600      	movs	r6, #0
 800036a:	4d0a      	ldr	r5, [pc, #40]	; (8000394 <__libc_init_array+0x40>)
 800036c:	4c0a      	ldr	r4, [pc, #40]	; (8000398 <__libc_init_array+0x44>)
 800036e:	1b64      	subs	r4, r4, r5
 8000370:	10a4      	asrs	r4, r4, #2
 8000372:	42a6      	cmp	r6, r4
 8000374:	d105      	bne.n	8000382 <__libc_init_array+0x2e>
 8000376:	bd70      	pop	{r4, r5, r6, pc}
 8000378:	f855 3b04 	ldr.w	r3, [r5], #4
 800037c:	4798      	blx	r3
 800037e:	3601      	adds	r6, #1
 8000380:	e7ee      	b.n	8000360 <__libc_init_array+0xc>
 8000382:	f855 3b04 	ldr.w	r3, [r5], #4
 8000386:	4798      	blx	r3
 8000388:	3601      	adds	r6, #1
 800038a:	e7f2      	b.n	8000372 <__libc_init_array+0x1e>
 800038c:	080003b4 	.word	0x080003b4
 8000390:	080003b4 	.word	0x080003b4
 8000394:	080003b4 	.word	0x080003b4
 8000398:	080003b8 	.word	0x080003b8

0800039c <_init>:
 800039c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039e:	bf00      	nop
 80003a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a2:	bc08      	pop	{r3}
 80003a4:	469e      	mov	lr, r3
 80003a6:	4770      	bx	lr

080003a8 <_fini>:
 80003a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003aa:	bf00      	nop
 80003ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ae:	bc08      	pop	{r3}
 80003b0:	469e      	mov	lr, r3
 80003b2:	4770      	bx	lr
