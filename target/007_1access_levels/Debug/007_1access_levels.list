
007_1access_levels.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c54  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d8  08000d84  08000d84  00010d84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e5c  08000e5c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e5c  08000e5c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e5c  08000e5c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e5c  08000e5c  00010e5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e60  08000e60  00010e60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e64  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000ec8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000ec8  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023b3  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000064a  00000000  00000000  00022440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00022a90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00022bc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bde  00000000  00000000  00022cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013f8  00000000  00000000  00025896  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009696  00000000  00000000  00026c8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030324  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a54  00000000  00000000  00030378  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08000d6c 	.word	0x08000d6c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08000d6c 	.word	0x08000d6c

08000170 <generate_interrupt>:
#include<stdio.h>
#include<stdint.h>

/* This function executes in THREAD MODE of the processor */
void generate_interrupt()
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	uint32_t *pSTIR  = (uint32_t*)0xE000EF00;
 8000176:	4b09      	ldr	r3, [pc, #36]	; (800019c <generate_interrupt+0x2c>)
 8000178:	607b      	str	r3, [r7, #4]
	uint32_t *pISER0 = (uint32_t*)0xE000E100;
 800017a:	4b09      	ldr	r3, [pc, #36]	; (80001a0 <generate_interrupt+0x30>)
 800017c:	603b      	str	r3, [r7, #0]

	//enable IRQ3 interrupt
	*pISER0 |= ( 1 << 3);
 800017e:	683b      	ldr	r3, [r7, #0]
 8000180:	681b      	ldr	r3, [r3, #0]
 8000182:	f043 0208 	orr.w	r2, r3, #8
 8000186:	683b      	ldr	r3, [r7, #0]
 8000188:	601a      	str	r2, [r3, #0]

	//generate an interrupt from software for IRQ3
	*pSTIR = (3 & 0x1FF);
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	2203      	movs	r2, #3
 800018e:	601a      	str	r2, [r3, #0]

}
 8000190:	bf00      	nop
 8000192:	370c      	adds	r7, #12
 8000194:	46bd      	mov	sp, r7
 8000196:	bc80      	pop	{r7}
 8000198:	4770      	bx	lr
 800019a:	bf00      	nop
 800019c:	e000ef00 	.word	0xe000ef00
 80001a0:	e000e100 	.word	0xe000e100

080001a4 <change_access_level_unpriv>:

void change_access_level_unpriv(void)
{
 80001a4:	b480      	push	{r7}
 80001a6:	af00      	add	r7, sp, #0

	//read
	__asm volatile ("MRS R0,CONTROL");
 80001a8:	f3ef 8014 	mrs	r0, CONTROL
	//modify
	__asm volatile ("ORR R0,R0,#0x01");
 80001ac:	f040 0001 	orr.w	r0, r0, #1
	//write
	__asm volatile ("MSR CONTROL,R0");
 80001b0:	f380 8814 	msr	CONTROL, r0

 }
 80001b4:	bf00      	nop
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bc80      	pop	{r7}
 80001ba:	4770      	bx	lr

080001bc <main>:

/* This function executes in THREAD MODE+ PRIV ACCESS LEVEL of the processor */
int main(void)
{
 80001bc:	b580      	push	{r7, lr}
 80001be:	af00      	add	r7, sp, #0
	printf("In thread mode : before interrupt\n");
 80001c0:	4805      	ldr	r0, [pc, #20]	; (80001d8 <main+0x1c>)
 80001c2:	f000 f97f 	bl	80004c4 <puts>

	change_access_level_unpriv();
 80001c6:	f7ff ffed 	bl	80001a4 <change_access_level_unpriv>

	generate_interrupt();
 80001ca:	f7ff ffd1 	bl	8000170 <generate_interrupt>

	printf("In thread mode : after interrupt\n");
 80001ce:	4803      	ldr	r0, [pc, #12]	; (80001dc <main+0x20>)
 80001d0:	f000 f978 	bl	80004c4 <puts>

	for(;;);
 80001d4:	e7fe      	b.n	80001d4 <main+0x18>
 80001d6:	bf00      	nop
 80001d8:	08000d84 	.word	0x08000d84
 80001dc:	08000da8 	.word	0x08000da8

080001e0 <HardFault_Handler>:
{
	printf("In handler mode : ISR\n");
}

void HardFault_Handler(void)
{
 80001e0:	b580      	push	{r7, lr}
 80001e2:	af00      	add	r7, sp, #0
	printf("Hard fault detected\n");
 80001e4:	4801      	ldr	r0, [pc, #4]	; (80001ec <HardFault_Handler+0xc>)
 80001e6:	f000 f96d 	bl	80004c4 <puts>
	while(1);
 80001ea:	e7fe      	b.n	80001ea <HardFault_Handler+0xa>
 80001ec:	08000de4 	.word	0x08000de4

080001f0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001f0:	b580      	push	{r7, lr}
 80001f2:	b086      	sub	sp, #24
 80001f4:	af00      	add	r7, sp, #0
 80001f6:	60f8      	str	r0, [r7, #12]
 80001f8:	60b9      	str	r1, [r7, #8]
 80001fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001fc:	2300      	movs	r3, #0
 80001fe:	617b      	str	r3, [r7, #20]
 8000200:	e00a      	b.n	8000218 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000202:	f3af 8000 	nop.w
 8000206:	4601      	mov	r1, r0
 8000208:	68bb      	ldr	r3, [r7, #8]
 800020a:	1c5a      	adds	r2, r3, #1
 800020c:	60ba      	str	r2, [r7, #8]
 800020e:	b2ca      	uxtb	r2, r1
 8000210:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000212:	697b      	ldr	r3, [r7, #20]
 8000214:	3301      	adds	r3, #1
 8000216:	617b      	str	r3, [r7, #20]
 8000218:	697a      	ldr	r2, [r7, #20]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	429a      	cmp	r2, r3
 800021e:	dbf0      	blt.n	8000202 <_read+0x12>
	}

return len;
 8000220:	687b      	ldr	r3, [r7, #4]
}
 8000222:	4618      	mov	r0, r3
 8000224:	3718      	adds	r7, #24
 8000226:	46bd      	mov	sp, r7
 8000228:	bd80      	pop	{r7, pc}

0800022a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800022a:	b580      	push	{r7, lr}
 800022c:	b086      	sub	sp, #24
 800022e:	af00      	add	r7, sp, #0
 8000230:	60f8      	str	r0, [r7, #12]
 8000232:	60b9      	str	r1, [r7, #8]
 8000234:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000236:	2300      	movs	r3, #0
 8000238:	617b      	str	r3, [r7, #20]
 800023a:	e009      	b.n	8000250 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800023c:	68bb      	ldr	r3, [r7, #8]
 800023e:	1c5a      	adds	r2, r3, #1
 8000240:	60ba      	str	r2, [r7, #8]
 8000242:	781b      	ldrb	r3, [r3, #0]
 8000244:	4618      	mov	r0, r3
 8000246:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800024a:	697b      	ldr	r3, [r7, #20]
 800024c:	3301      	adds	r3, #1
 800024e:	617b      	str	r3, [r7, #20]
 8000250:	697a      	ldr	r2, [r7, #20]
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	429a      	cmp	r2, r3
 8000256:	dbf1      	blt.n	800023c <_write+0x12>
	}
	return len;
 8000258:	687b      	ldr	r3, [r7, #4]
}
 800025a:	4618      	mov	r0, r3
 800025c:	3718      	adds	r7, #24
 800025e:	46bd      	mov	sp, r7
 8000260:	bd80      	pop	{r7, pc}

08000262 <_close>:

int _close(int file)
{
 8000262:	b480      	push	{r7}
 8000264:	b083      	sub	sp, #12
 8000266:	af00      	add	r7, sp, #0
 8000268:	6078      	str	r0, [r7, #4]
	return -1;
 800026a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800026e:	4618      	mov	r0, r3
 8000270:	370c      	adds	r7, #12
 8000272:	46bd      	mov	sp, r7
 8000274:	bc80      	pop	{r7}
 8000276:	4770      	bx	lr

08000278 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000278:	b480      	push	{r7}
 800027a:	b083      	sub	sp, #12
 800027c:	af00      	add	r7, sp, #0
 800027e:	6078      	str	r0, [r7, #4]
 8000280:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000282:	683b      	ldr	r3, [r7, #0]
 8000284:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000288:	605a      	str	r2, [r3, #4]
	return 0;
 800028a:	2300      	movs	r3, #0
}
 800028c:	4618      	mov	r0, r3
 800028e:	370c      	adds	r7, #12
 8000290:	46bd      	mov	sp, r7
 8000292:	bc80      	pop	{r7}
 8000294:	4770      	bx	lr

08000296 <_isatty>:

int _isatty(int file)
{
 8000296:	b480      	push	{r7}
 8000298:	b083      	sub	sp, #12
 800029a:	af00      	add	r7, sp, #0
 800029c:	6078      	str	r0, [r7, #4]
	return 1;
 800029e:	2301      	movs	r3, #1
}
 80002a0:	4618      	mov	r0, r3
 80002a2:	370c      	adds	r7, #12
 80002a4:	46bd      	mov	sp, r7
 80002a6:	bc80      	pop	{r7}
 80002a8:	4770      	bx	lr

080002aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002aa:	b480      	push	{r7}
 80002ac:	b085      	sub	sp, #20
 80002ae:	af00      	add	r7, sp, #0
 80002b0:	60f8      	str	r0, [r7, #12]
 80002b2:	60b9      	str	r1, [r7, #8]
 80002b4:	607a      	str	r2, [r7, #4]
	return 0;
 80002b6:	2300      	movs	r3, #0
}
 80002b8:	4618      	mov	r0, r3
 80002ba:	3714      	adds	r7, #20
 80002bc:	46bd      	mov	sp, r7
 80002be:	bc80      	pop	{r7}
 80002c0:	4770      	bx	lr
	...

080002c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b086      	sub	sp, #24
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002cc:	4a14      	ldr	r2, [pc, #80]	; (8000320 <_sbrk+0x5c>)
 80002ce:	4b15      	ldr	r3, [pc, #84]	; (8000324 <_sbrk+0x60>)
 80002d0:	1ad3      	subs	r3, r2, r3
 80002d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002d4:	697b      	ldr	r3, [r7, #20]
 80002d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002d8:	4b13      	ldr	r3, [pc, #76]	; (8000328 <_sbrk+0x64>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	2b00      	cmp	r3, #0
 80002de:	d102      	bne.n	80002e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002e0:	4b11      	ldr	r3, [pc, #68]	; (8000328 <_sbrk+0x64>)
 80002e2:	4a12      	ldr	r2, [pc, #72]	; (800032c <_sbrk+0x68>)
 80002e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002e6:	4b10      	ldr	r3, [pc, #64]	; (8000328 <_sbrk+0x64>)
 80002e8:	681a      	ldr	r2, [r3, #0]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4413      	add	r3, r2
 80002ee:	693a      	ldr	r2, [r7, #16]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	d207      	bcs.n	8000304 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002f4:	f000 f846 	bl	8000384 <__errno>
 80002f8:	4603      	mov	r3, r0
 80002fa:	220c      	movs	r2, #12
 80002fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002fe:	f04f 33ff 	mov.w	r3, #4294967295
 8000302:	e009      	b.n	8000318 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000304:	4b08      	ldr	r3, [pc, #32]	; (8000328 <_sbrk+0x64>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800030a:	4b07      	ldr	r3, [pc, #28]	; (8000328 <_sbrk+0x64>)
 800030c:	681a      	ldr	r2, [r3, #0]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4413      	add	r3, r2
 8000312:	4a05      	ldr	r2, [pc, #20]	; (8000328 <_sbrk+0x64>)
 8000314:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000316:	68fb      	ldr	r3, [r7, #12]
}
 8000318:	4618      	mov	r0, r3
 800031a:	3718      	adds	r7, #24
 800031c:	46bd      	mov	sp, r7
 800031e:	bd80      	pop	{r7, pc}
 8000320:	20005000 	.word	0x20005000
 8000324:	00000400 	.word	0x00000400
 8000328:	20000080 	.word	0x20000080
 800032c:	200000a0 	.word	0x200000a0

08000330 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000330:	480d      	ldr	r0, [pc, #52]	; (8000368 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000332:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000334:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000338:	480c      	ldr	r0, [pc, #48]	; (800036c <LoopForever+0x6>)
  ldr r1, =_edata
 800033a:	490d      	ldr	r1, [pc, #52]	; (8000370 <LoopForever+0xa>)
  ldr r2, =_sidata
 800033c:	4a0d      	ldr	r2, [pc, #52]	; (8000374 <LoopForever+0xe>)
  movs r3, #0
 800033e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000340:	e002      	b.n	8000348 <LoopCopyDataInit>

08000342 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000342:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000344:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000346:	3304      	adds	r3, #4

08000348 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000348:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800034a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800034c:	d3f9      	bcc.n	8000342 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800034e:	4a0a      	ldr	r2, [pc, #40]	; (8000378 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000350:	4c0a      	ldr	r4, [pc, #40]	; (800037c <LoopForever+0x16>)
  movs r3, #0
 8000352:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000354:	e001      	b.n	800035a <LoopFillZerobss>

08000356 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000356:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000358:	3204      	adds	r2, #4

0800035a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800035a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800035c:	d3fb      	bcc.n	8000356 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800035e:	f000 f817 	bl	8000390 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000362:	f7ff ff2b 	bl	80001bc <main>

08000366 <LoopForever>:

LoopForever:
    b LoopForever
 8000366:	e7fe      	b.n	8000366 <LoopForever>
  ldr   r0, =_estack
 8000368:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800036c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000370:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000374:	08000e64 	.word	0x08000e64
  ldr r2, =_sbss
 8000378:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800037c:	2000009c 	.word	0x2000009c

08000380 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000380:	e7fe      	b.n	8000380 <ADC1_2_IRQHandler>
	...

08000384 <__errno>:
 8000384:	4b01      	ldr	r3, [pc, #4]	; (800038c <__errno+0x8>)
 8000386:	6818      	ldr	r0, [r3, #0]
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	20000000 	.word	0x20000000

08000390 <__libc_init_array>:
 8000390:	b570      	push	{r4, r5, r6, lr}
 8000392:	2600      	movs	r6, #0
 8000394:	4d0c      	ldr	r5, [pc, #48]	; (80003c8 <__libc_init_array+0x38>)
 8000396:	4c0d      	ldr	r4, [pc, #52]	; (80003cc <__libc_init_array+0x3c>)
 8000398:	1b64      	subs	r4, r4, r5
 800039a:	10a4      	asrs	r4, r4, #2
 800039c:	42a6      	cmp	r6, r4
 800039e:	d109      	bne.n	80003b4 <__libc_init_array+0x24>
 80003a0:	f000 fce4 	bl	8000d6c <_init>
 80003a4:	2600      	movs	r6, #0
 80003a6:	4d0a      	ldr	r5, [pc, #40]	; (80003d0 <__libc_init_array+0x40>)
 80003a8:	4c0a      	ldr	r4, [pc, #40]	; (80003d4 <__libc_init_array+0x44>)
 80003aa:	1b64      	subs	r4, r4, r5
 80003ac:	10a4      	asrs	r4, r4, #2
 80003ae:	42a6      	cmp	r6, r4
 80003b0:	d105      	bne.n	80003be <__libc_init_array+0x2e>
 80003b2:	bd70      	pop	{r4, r5, r6, pc}
 80003b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003b8:	4798      	blx	r3
 80003ba:	3601      	adds	r6, #1
 80003bc:	e7ee      	b.n	800039c <__libc_init_array+0xc>
 80003be:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c2:	4798      	blx	r3
 80003c4:	3601      	adds	r6, #1
 80003c6:	e7f2      	b.n	80003ae <__libc_init_array+0x1e>
 80003c8:	08000e5c 	.word	0x08000e5c
 80003cc:	08000e5c 	.word	0x08000e5c
 80003d0:	08000e5c 	.word	0x08000e5c
 80003d4:	08000e60 	.word	0x08000e60

080003d8 <memset>:
 80003d8:	4603      	mov	r3, r0
 80003da:	4402      	add	r2, r0
 80003dc:	4293      	cmp	r3, r2
 80003de:	d100      	bne.n	80003e2 <memset+0xa>
 80003e0:	4770      	bx	lr
 80003e2:	f803 1b01 	strb.w	r1, [r3], #1
 80003e6:	e7f9      	b.n	80003dc <memset+0x4>

080003e8 <_puts_r>:
 80003e8:	b570      	push	{r4, r5, r6, lr}
 80003ea:	460e      	mov	r6, r1
 80003ec:	4605      	mov	r5, r0
 80003ee:	b118      	cbz	r0, 80003f8 <_puts_r+0x10>
 80003f0:	6983      	ldr	r3, [r0, #24]
 80003f2:	b90b      	cbnz	r3, 80003f8 <_puts_r+0x10>
 80003f4:	f000 fa48 	bl	8000888 <__sinit>
 80003f8:	69ab      	ldr	r3, [r5, #24]
 80003fa:	68ac      	ldr	r4, [r5, #8]
 80003fc:	b913      	cbnz	r3, 8000404 <_puts_r+0x1c>
 80003fe:	4628      	mov	r0, r5
 8000400:	f000 fa42 	bl	8000888 <__sinit>
 8000404:	4b2c      	ldr	r3, [pc, #176]	; (80004b8 <_puts_r+0xd0>)
 8000406:	429c      	cmp	r4, r3
 8000408:	d120      	bne.n	800044c <_puts_r+0x64>
 800040a:	686c      	ldr	r4, [r5, #4]
 800040c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800040e:	07db      	lsls	r3, r3, #31
 8000410:	d405      	bmi.n	800041e <_puts_r+0x36>
 8000412:	89a3      	ldrh	r3, [r4, #12]
 8000414:	0598      	lsls	r0, r3, #22
 8000416:	d402      	bmi.n	800041e <_puts_r+0x36>
 8000418:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800041a:	f000 fad3 	bl	80009c4 <__retarget_lock_acquire_recursive>
 800041e:	89a3      	ldrh	r3, [r4, #12]
 8000420:	0719      	lsls	r1, r3, #28
 8000422:	d51d      	bpl.n	8000460 <_puts_r+0x78>
 8000424:	6923      	ldr	r3, [r4, #16]
 8000426:	b1db      	cbz	r3, 8000460 <_puts_r+0x78>
 8000428:	3e01      	subs	r6, #1
 800042a:	68a3      	ldr	r3, [r4, #8]
 800042c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000430:	3b01      	subs	r3, #1
 8000432:	60a3      	str	r3, [r4, #8]
 8000434:	bb39      	cbnz	r1, 8000486 <_puts_r+0x9e>
 8000436:	2b00      	cmp	r3, #0
 8000438:	da38      	bge.n	80004ac <_puts_r+0xc4>
 800043a:	4622      	mov	r2, r4
 800043c:	210a      	movs	r1, #10
 800043e:	4628      	mov	r0, r5
 8000440:	f000 f848 	bl	80004d4 <__swbuf_r>
 8000444:	3001      	adds	r0, #1
 8000446:	d011      	beq.n	800046c <_puts_r+0x84>
 8000448:	250a      	movs	r5, #10
 800044a:	e011      	b.n	8000470 <_puts_r+0x88>
 800044c:	4b1b      	ldr	r3, [pc, #108]	; (80004bc <_puts_r+0xd4>)
 800044e:	429c      	cmp	r4, r3
 8000450:	d101      	bne.n	8000456 <_puts_r+0x6e>
 8000452:	68ac      	ldr	r4, [r5, #8]
 8000454:	e7da      	b.n	800040c <_puts_r+0x24>
 8000456:	4b1a      	ldr	r3, [pc, #104]	; (80004c0 <_puts_r+0xd8>)
 8000458:	429c      	cmp	r4, r3
 800045a:	bf08      	it	eq
 800045c:	68ec      	ldreq	r4, [r5, #12]
 800045e:	e7d5      	b.n	800040c <_puts_r+0x24>
 8000460:	4621      	mov	r1, r4
 8000462:	4628      	mov	r0, r5
 8000464:	f000 f888 	bl	8000578 <__swsetup_r>
 8000468:	2800      	cmp	r0, #0
 800046a:	d0dd      	beq.n	8000428 <_puts_r+0x40>
 800046c:	f04f 35ff 	mov.w	r5, #4294967295
 8000470:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000472:	07da      	lsls	r2, r3, #31
 8000474:	d405      	bmi.n	8000482 <_puts_r+0x9a>
 8000476:	89a3      	ldrh	r3, [r4, #12]
 8000478:	059b      	lsls	r3, r3, #22
 800047a:	d402      	bmi.n	8000482 <_puts_r+0x9a>
 800047c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800047e:	f000 faa2 	bl	80009c6 <__retarget_lock_release_recursive>
 8000482:	4628      	mov	r0, r5
 8000484:	bd70      	pop	{r4, r5, r6, pc}
 8000486:	2b00      	cmp	r3, #0
 8000488:	da04      	bge.n	8000494 <_puts_r+0xac>
 800048a:	69a2      	ldr	r2, [r4, #24]
 800048c:	429a      	cmp	r2, r3
 800048e:	dc06      	bgt.n	800049e <_puts_r+0xb6>
 8000490:	290a      	cmp	r1, #10
 8000492:	d004      	beq.n	800049e <_puts_r+0xb6>
 8000494:	6823      	ldr	r3, [r4, #0]
 8000496:	1c5a      	adds	r2, r3, #1
 8000498:	6022      	str	r2, [r4, #0]
 800049a:	7019      	strb	r1, [r3, #0]
 800049c:	e7c5      	b.n	800042a <_puts_r+0x42>
 800049e:	4622      	mov	r2, r4
 80004a0:	4628      	mov	r0, r5
 80004a2:	f000 f817 	bl	80004d4 <__swbuf_r>
 80004a6:	3001      	adds	r0, #1
 80004a8:	d1bf      	bne.n	800042a <_puts_r+0x42>
 80004aa:	e7df      	b.n	800046c <_puts_r+0x84>
 80004ac:	250a      	movs	r5, #10
 80004ae:	6823      	ldr	r3, [r4, #0]
 80004b0:	1c5a      	adds	r2, r3, #1
 80004b2:	6022      	str	r2, [r4, #0]
 80004b4:	701d      	strb	r5, [r3, #0]
 80004b6:	e7db      	b.n	8000470 <_puts_r+0x88>
 80004b8:	08000e1c 	.word	0x08000e1c
 80004bc:	08000e3c 	.word	0x08000e3c
 80004c0:	08000dfc 	.word	0x08000dfc

080004c4 <puts>:
 80004c4:	4b02      	ldr	r3, [pc, #8]	; (80004d0 <puts+0xc>)
 80004c6:	4601      	mov	r1, r0
 80004c8:	6818      	ldr	r0, [r3, #0]
 80004ca:	f7ff bf8d 	b.w	80003e8 <_puts_r>
 80004ce:	bf00      	nop
 80004d0:	20000000 	.word	0x20000000

080004d4 <__swbuf_r>:
 80004d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004d6:	460e      	mov	r6, r1
 80004d8:	4614      	mov	r4, r2
 80004da:	4605      	mov	r5, r0
 80004dc:	b118      	cbz	r0, 80004e6 <__swbuf_r+0x12>
 80004de:	6983      	ldr	r3, [r0, #24]
 80004e0:	b90b      	cbnz	r3, 80004e6 <__swbuf_r+0x12>
 80004e2:	f000 f9d1 	bl	8000888 <__sinit>
 80004e6:	4b21      	ldr	r3, [pc, #132]	; (800056c <__swbuf_r+0x98>)
 80004e8:	429c      	cmp	r4, r3
 80004ea:	d12b      	bne.n	8000544 <__swbuf_r+0x70>
 80004ec:	686c      	ldr	r4, [r5, #4]
 80004ee:	69a3      	ldr	r3, [r4, #24]
 80004f0:	60a3      	str	r3, [r4, #8]
 80004f2:	89a3      	ldrh	r3, [r4, #12]
 80004f4:	071a      	lsls	r2, r3, #28
 80004f6:	d52f      	bpl.n	8000558 <__swbuf_r+0x84>
 80004f8:	6923      	ldr	r3, [r4, #16]
 80004fa:	b36b      	cbz	r3, 8000558 <__swbuf_r+0x84>
 80004fc:	6923      	ldr	r3, [r4, #16]
 80004fe:	6820      	ldr	r0, [r4, #0]
 8000500:	b2f6      	uxtb	r6, r6
 8000502:	1ac0      	subs	r0, r0, r3
 8000504:	6963      	ldr	r3, [r4, #20]
 8000506:	4637      	mov	r7, r6
 8000508:	4283      	cmp	r3, r0
 800050a:	dc04      	bgt.n	8000516 <__swbuf_r+0x42>
 800050c:	4621      	mov	r1, r4
 800050e:	4628      	mov	r0, r5
 8000510:	f000 f926 	bl	8000760 <_fflush_r>
 8000514:	bb30      	cbnz	r0, 8000564 <__swbuf_r+0x90>
 8000516:	68a3      	ldr	r3, [r4, #8]
 8000518:	3001      	adds	r0, #1
 800051a:	3b01      	subs	r3, #1
 800051c:	60a3      	str	r3, [r4, #8]
 800051e:	6823      	ldr	r3, [r4, #0]
 8000520:	1c5a      	adds	r2, r3, #1
 8000522:	6022      	str	r2, [r4, #0]
 8000524:	701e      	strb	r6, [r3, #0]
 8000526:	6963      	ldr	r3, [r4, #20]
 8000528:	4283      	cmp	r3, r0
 800052a:	d004      	beq.n	8000536 <__swbuf_r+0x62>
 800052c:	89a3      	ldrh	r3, [r4, #12]
 800052e:	07db      	lsls	r3, r3, #31
 8000530:	d506      	bpl.n	8000540 <__swbuf_r+0x6c>
 8000532:	2e0a      	cmp	r6, #10
 8000534:	d104      	bne.n	8000540 <__swbuf_r+0x6c>
 8000536:	4621      	mov	r1, r4
 8000538:	4628      	mov	r0, r5
 800053a:	f000 f911 	bl	8000760 <_fflush_r>
 800053e:	b988      	cbnz	r0, 8000564 <__swbuf_r+0x90>
 8000540:	4638      	mov	r0, r7
 8000542:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000544:	4b0a      	ldr	r3, [pc, #40]	; (8000570 <__swbuf_r+0x9c>)
 8000546:	429c      	cmp	r4, r3
 8000548:	d101      	bne.n	800054e <__swbuf_r+0x7a>
 800054a:	68ac      	ldr	r4, [r5, #8]
 800054c:	e7cf      	b.n	80004ee <__swbuf_r+0x1a>
 800054e:	4b09      	ldr	r3, [pc, #36]	; (8000574 <__swbuf_r+0xa0>)
 8000550:	429c      	cmp	r4, r3
 8000552:	bf08      	it	eq
 8000554:	68ec      	ldreq	r4, [r5, #12]
 8000556:	e7ca      	b.n	80004ee <__swbuf_r+0x1a>
 8000558:	4621      	mov	r1, r4
 800055a:	4628      	mov	r0, r5
 800055c:	f000 f80c 	bl	8000578 <__swsetup_r>
 8000560:	2800      	cmp	r0, #0
 8000562:	d0cb      	beq.n	80004fc <__swbuf_r+0x28>
 8000564:	f04f 37ff 	mov.w	r7, #4294967295
 8000568:	e7ea      	b.n	8000540 <__swbuf_r+0x6c>
 800056a:	bf00      	nop
 800056c:	08000e1c 	.word	0x08000e1c
 8000570:	08000e3c 	.word	0x08000e3c
 8000574:	08000dfc 	.word	0x08000dfc

08000578 <__swsetup_r>:
 8000578:	4b32      	ldr	r3, [pc, #200]	; (8000644 <__swsetup_r+0xcc>)
 800057a:	b570      	push	{r4, r5, r6, lr}
 800057c:	681d      	ldr	r5, [r3, #0]
 800057e:	4606      	mov	r6, r0
 8000580:	460c      	mov	r4, r1
 8000582:	b125      	cbz	r5, 800058e <__swsetup_r+0x16>
 8000584:	69ab      	ldr	r3, [r5, #24]
 8000586:	b913      	cbnz	r3, 800058e <__swsetup_r+0x16>
 8000588:	4628      	mov	r0, r5
 800058a:	f000 f97d 	bl	8000888 <__sinit>
 800058e:	4b2e      	ldr	r3, [pc, #184]	; (8000648 <__swsetup_r+0xd0>)
 8000590:	429c      	cmp	r4, r3
 8000592:	d10f      	bne.n	80005b4 <__swsetup_r+0x3c>
 8000594:	686c      	ldr	r4, [r5, #4]
 8000596:	89a3      	ldrh	r3, [r4, #12]
 8000598:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800059c:	0719      	lsls	r1, r3, #28
 800059e:	d42c      	bmi.n	80005fa <__swsetup_r+0x82>
 80005a0:	06dd      	lsls	r5, r3, #27
 80005a2:	d411      	bmi.n	80005c8 <__swsetup_r+0x50>
 80005a4:	2309      	movs	r3, #9
 80005a6:	6033      	str	r3, [r6, #0]
 80005a8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80005ac:	f04f 30ff 	mov.w	r0, #4294967295
 80005b0:	81a3      	strh	r3, [r4, #12]
 80005b2:	e03e      	b.n	8000632 <__swsetup_r+0xba>
 80005b4:	4b25      	ldr	r3, [pc, #148]	; (800064c <__swsetup_r+0xd4>)
 80005b6:	429c      	cmp	r4, r3
 80005b8:	d101      	bne.n	80005be <__swsetup_r+0x46>
 80005ba:	68ac      	ldr	r4, [r5, #8]
 80005bc:	e7eb      	b.n	8000596 <__swsetup_r+0x1e>
 80005be:	4b24      	ldr	r3, [pc, #144]	; (8000650 <__swsetup_r+0xd8>)
 80005c0:	429c      	cmp	r4, r3
 80005c2:	bf08      	it	eq
 80005c4:	68ec      	ldreq	r4, [r5, #12]
 80005c6:	e7e6      	b.n	8000596 <__swsetup_r+0x1e>
 80005c8:	0758      	lsls	r0, r3, #29
 80005ca:	d512      	bpl.n	80005f2 <__swsetup_r+0x7a>
 80005cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005ce:	b141      	cbz	r1, 80005e2 <__swsetup_r+0x6a>
 80005d0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005d4:	4299      	cmp	r1, r3
 80005d6:	d002      	beq.n	80005de <__swsetup_r+0x66>
 80005d8:	4630      	mov	r0, r6
 80005da:	f000 fa59 	bl	8000a90 <_free_r>
 80005de:	2300      	movs	r3, #0
 80005e0:	6363      	str	r3, [r4, #52]	; 0x34
 80005e2:	89a3      	ldrh	r3, [r4, #12]
 80005e4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80005e8:	81a3      	strh	r3, [r4, #12]
 80005ea:	2300      	movs	r3, #0
 80005ec:	6063      	str	r3, [r4, #4]
 80005ee:	6923      	ldr	r3, [r4, #16]
 80005f0:	6023      	str	r3, [r4, #0]
 80005f2:	89a3      	ldrh	r3, [r4, #12]
 80005f4:	f043 0308 	orr.w	r3, r3, #8
 80005f8:	81a3      	strh	r3, [r4, #12]
 80005fa:	6923      	ldr	r3, [r4, #16]
 80005fc:	b94b      	cbnz	r3, 8000612 <__swsetup_r+0x9a>
 80005fe:	89a3      	ldrh	r3, [r4, #12]
 8000600:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000604:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000608:	d003      	beq.n	8000612 <__swsetup_r+0x9a>
 800060a:	4621      	mov	r1, r4
 800060c:	4630      	mov	r0, r6
 800060e:	f000 f9ff 	bl	8000a10 <__smakebuf_r>
 8000612:	89a0      	ldrh	r0, [r4, #12]
 8000614:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000618:	f010 0301 	ands.w	r3, r0, #1
 800061c:	d00a      	beq.n	8000634 <__swsetup_r+0xbc>
 800061e:	2300      	movs	r3, #0
 8000620:	60a3      	str	r3, [r4, #8]
 8000622:	6963      	ldr	r3, [r4, #20]
 8000624:	425b      	negs	r3, r3
 8000626:	61a3      	str	r3, [r4, #24]
 8000628:	6923      	ldr	r3, [r4, #16]
 800062a:	b943      	cbnz	r3, 800063e <__swsetup_r+0xc6>
 800062c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000630:	d1ba      	bne.n	80005a8 <__swsetup_r+0x30>
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	0781      	lsls	r1, r0, #30
 8000636:	bf58      	it	pl
 8000638:	6963      	ldrpl	r3, [r4, #20]
 800063a:	60a3      	str	r3, [r4, #8]
 800063c:	e7f4      	b.n	8000628 <__swsetup_r+0xb0>
 800063e:	2000      	movs	r0, #0
 8000640:	e7f7      	b.n	8000632 <__swsetup_r+0xba>
 8000642:	bf00      	nop
 8000644:	20000000 	.word	0x20000000
 8000648:	08000e1c 	.word	0x08000e1c
 800064c:	08000e3c 	.word	0x08000e3c
 8000650:	08000dfc 	.word	0x08000dfc

08000654 <__sflush_r>:
 8000654:	898a      	ldrh	r2, [r1, #12]
 8000656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800065a:	4605      	mov	r5, r0
 800065c:	0710      	lsls	r0, r2, #28
 800065e:	460c      	mov	r4, r1
 8000660:	d458      	bmi.n	8000714 <__sflush_r+0xc0>
 8000662:	684b      	ldr	r3, [r1, #4]
 8000664:	2b00      	cmp	r3, #0
 8000666:	dc05      	bgt.n	8000674 <__sflush_r+0x20>
 8000668:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800066a:	2b00      	cmp	r3, #0
 800066c:	dc02      	bgt.n	8000674 <__sflush_r+0x20>
 800066e:	2000      	movs	r0, #0
 8000670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000674:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000676:	2e00      	cmp	r6, #0
 8000678:	d0f9      	beq.n	800066e <__sflush_r+0x1a>
 800067a:	2300      	movs	r3, #0
 800067c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000680:	682f      	ldr	r7, [r5, #0]
 8000682:	602b      	str	r3, [r5, #0]
 8000684:	d032      	beq.n	80006ec <__sflush_r+0x98>
 8000686:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000688:	89a3      	ldrh	r3, [r4, #12]
 800068a:	075a      	lsls	r2, r3, #29
 800068c:	d505      	bpl.n	800069a <__sflush_r+0x46>
 800068e:	6863      	ldr	r3, [r4, #4]
 8000690:	1ac0      	subs	r0, r0, r3
 8000692:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000694:	b10b      	cbz	r3, 800069a <__sflush_r+0x46>
 8000696:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000698:	1ac0      	subs	r0, r0, r3
 800069a:	2300      	movs	r3, #0
 800069c:	4602      	mov	r2, r0
 800069e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006a0:	4628      	mov	r0, r5
 80006a2:	6a21      	ldr	r1, [r4, #32]
 80006a4:	47b0      	blx	r6
 80006a6:	1c43      	adds	r3, r0, #1
 80006a8:	89a3      	ldrh	r3, [r4, #12]
 80006aa:	d106      	bne.n	80006ba <__sflush_r+0x66>
 80006ac:	6829      	ldr	r1, [r5, #0]
 80006ae:	291d      	cmp	r1, #29
 80006b0:	d82c      	bhi.n	800070c <__sflush_r+0xb8>
 80006b2:	4a2a      	ldr	r2, [pc, #168]	; (800075c <__sflush_r+0x108>)
 80006b4:	40ca      	lsrs	r2, r1
 80006b6:	07d6      	lsls	r6, r2, #31
 80006b8:	d528      	bpl.n	800070c <__sflush_r+0xb8>
 80006ba:	2200      	movs	r2, #0
 80006bc:	6062      	str	r2, [r4, #4]
 80006be:	6922      	ldr	r2, [r4, #16]
 80006c0:	04d9      	lsls	r1, r3, #19
 80006c2:	6022      	str	r2, [r4, #0]
 80006c4:	d504      	bpl.n	80006d0 <__sflush_r+0x7c>
 80006c6:	1c42      	adds	r2, r0, #1
 80006c8:	d101      	bne.n	80006ce <__sflush_r+0x7a>
 80006ca:	682b      	ldr	r3, [r5, #0]
 80006cc:	b903      	cbnz	r3, 80006d0 <__sflush_r+0x7c>
 80006ce:	6560      	str	r0, [r4, #84]	; 0x54
 80006d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006d2:	602f      	str	r7, [r5, #0]
 80006d4:	2900      	cmp	r1, #0
 80006d6:	d0ca      	beq.n	800066e <__sflush_r+0x1a>
 80006d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006dc:	4299      	cmp	r1, r3
 80006de:	d002      	beq.n	80006e6 <__sflush_r+0x92>
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 f9d5 	bl	8000a90 <_free_r>
 80006e6:	2000      	movs	r0, #0
 80006e8:	6360      	str	r0, [r4, #52]	; 0x34
 80006ea:	e7c1      	b.n	8000670 <__sflush_r+0x1c>
 80006ec:	6a21      	ldr	r1, [r4, #32]
 80006ee:	2301      	movs	r3, #1
 80006f0:	4628      	mov	r0, r5
 80006f2:	47b0      	blx	r6
 80006f4:	1c41      	adds	r1, r0, #1
 80006f6:	d1c7      	bne.n	8000688 <__sflush_r+0x34>
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	d0c4      	beq.n	8000688 <__sflush_r+0x34>
 80006fe:	2b1d      	cmp	r3, #29
 8000700:	d001      	beq.n	8000706 <__sflush_r+0xb2>
 8000702:	2b16      	cmp	r3, #22
 8000704:	d101      	bne.n	800070a <__sflush_r+0xb6>
 8000706:	602f      	str	r7, [r5, #0]
 8000708:	e7b1      	b.n	800066e <__sflush_r+0x1a>
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000710:	81a3      	strh	r3, [r4, #12]
 8000712:	e7ad      	b.n	8000670 <__sflush_r+0x1c>
 8000714:	690f      	ldr	r7, [r1, #16]
 8000716:	2f00      	cmp	r7, #0
 8000718:	d0a9      	beq.n	800066e <__sflush_r+0x1a>
 800071a:	0793      	lsls	r3, r2, #30
 800071c:	bf18      	it	ne
 800071e:	2300      	movne	r3, #0
 8000720:	680e      	ldr	r6, [r1, #0]
 8000722:	bf08      	it	eq
 8000724:	694b      	ldreq	r3, [r1, #20]
 8000726:	eba6 0807 	sub.w	r8, r6, r7
 800072a:	600f      	str	r7, [r1, #0]
 800072c:	608b      	str	r3, [r1, #8]
 800072e:	f1b8 0f00 	cmp.w	r8, #0
 8000732:	dd9c      	ble.n	800066e <__sflush_r+0x1a>
 8000734:	4643      	mov	r3, r8
 8000736:	463a      	mov	r2, r7
 8000738:	4628      	mov	r0, r5
 800073a:	6a21      	ldr	r1, [r4, #32]
 800073c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800073e:	47b0      	blx	r6
 8000740:	2800      	cmp	r0, #0
 8000742:	dc06      	bgt.n	8000752 <__sflush_r+0xfe>
 8000744:	89a3      	ldrh	r3, [r4, #12]
 8000746:	f04f 30ff 	mov.w	r0, #4294967295
 800074a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800074e:	81a3      	strh	r3, [r4, #12]
 8000750:	e78e      	b.n	8000670 <__sflush_r+0x1c>
 8000752:	4407      	add	r7, r0
 8000754:	eba8 0800 	sub.w	r8, r8, r0
 8000758:	e7e9      	b.n	800072e <__sflush_r+0xda>
 800075a:	bf00      	nop
 800075c:	20400001 	.word	0x20400001

08000760 <_fflush_r>:
 8000760:	b538      	push	{r3, r4, r5, lr}
 8000762:	690b      	ldr	r3, [r1, #16]
 8000764:	4605      	mov	r5, r0
 8000766:	460c      	mov	r4, r1
 8000768:	b913      	cbnz	r3, 8000770 <_fflush_r+0x10>
 800076a:	2500      	movs	r5, #0
 800076c:	4628      	mov	r0, r5
 800076e:	bd38      	pop	{r3, r4, r5, pc}
 8000770:	b118      	cbz	r0, 800077a <_fflush_r+0x1a>
 8000772:	6983      	ldr	r3, [r0, #24]
 8000774:	b90b      	cbnz	r3, 800077a <_fflush_r+0x1a>
 8000776:	f000 f887 	bl	8000888 <__sinit>
 800077a:	4b14      	ldr	r3, [pc, #80]	; (80007cc <_fflush_r+0x6c>)
 800077c:	429c      	cmp	r4, r3
 800077e:	d11b      	bne.n	80007b8 <_fflush_r+0x58>
 8000780:	686c      	ldr	r4, [r5, #4]
 8000782:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000786:	2b00      	cmp	r3, #0
 8000788:	d0ef      	beq.n	800076a <_fflush_r+0xa>
 800078a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800078c:	07d0      	lsls	r0, r2, #31
 800078e:	d404      	bmi.n	800079a <_fflush_r+0x3a>
 8000790:	0599      	lsls	r1, r3, #22
 8000792:	d402      	bmi.n	800079a <_fflush_r+0x3a>
 8000794:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000796:	f000 f915 	bl	80009c4 <__retarget_lock_acquire_recursive>
 800079a:	4628      	mov	r0, r5
 800079c:	4621      	mov	r1, r4
 800079e:	f7ff ff59 	bl	8000654 <__sflush_r>
 80007a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80007a4:	4605      	mov	r5, r0
 80007a6:	07da      	lsls	r2, r3, #31
 80007a8:	d4e0      	bmi.n	800076c <_fflush_r+0xc>
 80007aa:	89a3      	ldrh	r3, [r4, #12]
 80007ac:	059b      	lsls	r3, r3, #22
 80007ae:	d4dd      	bmi.n	800076c <_fflush_r+0xc>
 80007b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007b2:	f000 f908 	bl	80009c6 <__retarget_lock_release_recursive>
 80007b6:	e7d9      	b.n	800076c <_fflush_r+0xc>
 80007b8:	4b05      	ldr	r3, [pc, #20]	; (80007d0 <_fflush_r+0x70>)
 80007ba:	429c      	cmp	r4, r3
 80007bc:	d101      	bne.n	80007c2 <_fflush_r+0x62>
 80007be:	68ac      	ldr	r4, [r5, #8]
 80007c0:	e7df      	b.n	8000782 <_fflush_r+0x22>
 80007c2:	4b04      	ldr	r3, [pc, #16]	; (80007d4 <_fflush_r+0x74>)
 80007c4:	429c      	cmp	r4, r3
 80007c6:	bf08      	it	eq
 80007c8:	68ec      	ldreq	r4, [r5, #12]
 80007ca:	e7da      	b.n	8000782 <_fflush_r+0x22>
 80007cc:	08000e1c 	.word	0x08000e1c
 80007d0:	08000e3c 	.word	0x08000e3c
 80007d4:	08000dfc 	.word	0x08000dfc

080007d8 <std>:
 80007d8:	2300      	movs	r3, #0
 80007da:	b510      	push	{r4, lr}
 80007dc:	4604      	mov	r4, r0
 80007de:	e9c0 3300 	strd	r3, r3, [r0]
 80007e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007e6:	6083      	str	r3, [r0, #8]
 80007e8:	8181      	strh	r1, [r0, #12]
 80007ea:	6643      	str	r3, [r0, #100]	; 0x64
 80007ec:	81c2      	strh	r2, [r0, #14]
 80007ee:	6183      	str	r3, [r0, #24]
 80007f0:	4619      	mov	r1, r3
 80007f2:	2208      	movs	r2, #8
 80007f4:	305c      	adds	r0, #92	; 0x5c
 80007f6:	f7ff fdef 	bl	80003d8 <memset>
 80007fa:	4b05      	ldr	r3, [pc, #20]	; (8000810 <std+0x38>)
 80007fc:	6224      	str	r4, [r4, #32]
 80007fe:	6263      	str	r3, [r4, #36]	; 0x24
 8000800:	4b04      	ldr	r3, [pc, #16]	; (8000814 <std+0x3c>)
 8000802:	62a3      	str	r3, [r4, #40]	; 0x28
 8000804:	4b04      	ldr	r3, [pc, #16]	; (8000818 <std+0x40>)
 8000806:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000808:	4b04      	ldr	r3, [pc, #16]	; (800081c <std+0x44>)
 800080a:	6323      	str	r3, [r4, #48]	; 0x30
 800080c:	bd10      	pop	{r4, pc}
 800080e:	bf00      	nop
 8000810:	08000bfd 	.word	0x08000bfd
 8000814:	08000c1f 	.word	0x08000c1f
 8000818:	08000c57 	.word	0x08000c57
 800081c:	08000c7b 	.word	0x08000c7b

08000820 <_cleanup_r>:
 8000820:	4901      	ldr	r1, [pc, #4]	; (8000828 <_cleanup_r+0x8>)
 8000822:	f000 b8af 	b.w	8000984 <_fwalk_reent>
 8000826:	bf00      	nop
 8000828:	08000761 	.word	0x08000761

0800082c <__sfmoreglue>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	2568      	movs	r5, #104	; 0x68
 8000830:	1e4a      	subs	r2, r1, #1
 8000832:	4355      	muls	r5, r2
 8000834:	460e      	mov	r6, r1
 8000836:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800083a:	f000 f975 	bl	8000b28 <_malloc_r>
 800083e:	4604      	mov	r4, r0
 8000840:	b140      	cbz	r0, 8000854 <__sfmoreglue+0x28>
 8000842:	2100      	movs	r1, #0
 8000844:	e9c0 1600 	strd	r1, r6, [r0]
 8000848:	300c      	adds	r0, #12
 800084a:	60a0      	str	r0, [r4, #8]
 800084c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000850:	f7ff fdc2 	bl	80003d8 <memset>
 8000854:	4620      	mov	r0, r4
 8000856:	bd70      	pop	{r4, r5, r6, pc}

08000858 <__sfp_lock_acquire>:
 8000858:	4801      	ldr	r0, [pc, #4]	; (8000860 <__sfp_lock_acquire+0x8>)
 800085a:	f000 b8b3 	b.w	80009c4 <__retarget_lock_acquire_recursive>
 800085e:	bf00      	nop
 8000860:	20000094 	.word	0x20000094

08000864 <__sfp_lock_release>:
 8000864:	4801      	ldr	r0, [pc, #4]	; (800086c <__sfp_lock_release+0x8>)
 8000866:	f000 b8ae 	b.w	80009c6 <__retarget_lock_release_recursive>
 800086a:	bf00      	nop
 800086c:	20000094 	.word	0x20000094

08000870 <__sinit_lock_acquire>:
 8000870:	4801      	ldr	r0, [pc, #4]	; (8000878 <__sinit_lock_acquire+0x8>)
 8000872:	f000 b8a7 	b.w	80009c4 <__retarget_lock_acquire_recursive>
 8000876:	bf00      	nop
 8000878:	2000008f 	.word	0x2000008f

0800087c <__sinit_lock_release>:
 800087c:	4801      	ldr	r0, [pc, #4]	; (8000884 <__sinit_lock_release+0x8>)
 800087e:	f000 b8a2 	b.w	80009c6 <__retarget_lock_release_recursive>
 8000882:	bf00      	nop
 8000884:	2000008f 	.word	0x2000008f

08000888 <__sinit>:
 8000888:	b510      	push	{r4, lr}
 800088a:	4604      	mov	r4, r0
 800088c:	f7ff fff0 	bl	8000870 <__sinit_lock_acquire>
 8000890:	69a3      	ldr	r3, [r4, #24]
 8000892:	b11b      	cbz	r3, 800089c <__sinit+0x14>
 8000894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000898:	f7ff bff0 	b.w	800087c <__sinit_lock_release>
 800089c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008a0:	6523      	str	r3, [r4, #80]	; 0x50
 80008a2:	4b13      	ldr	r3, [pc, #76]	; (80008f0 <__sinit+0x68>)
 80008a4:	4a13      	ldr	r2, [pc, #76]	; (80008f4 <__sinit+0x6c>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	62a2      	str	r2, [r4, #40]	; 0x28
 80008aa:	42a3      	cmp	r3, r4
 80008ac:	bf08      	it	eq
 80008ae:	2301      	moveq	r3, #1
 80008b0:	4620      	mov	r0, r4
 80008b2:	bf08      	it	eq
 80008b4:	61a3      	streq	r3, [r4, #24]
 80008b6:	f000 f81f 	bl	80008f8 <__sfp>
 80008ba:	6060      	str	r0, [r4, #4]
 80008bc:	4620      	mov	r0, r4
 80008be:	f000 f81b 	bl	80008f8 <__sfp>
 80008c2:	60a0      	str	r0, [r4, #8]
 80008c4:	4620      	mov	r0, r4
 80008c6:	f000 f817 	bl	80008f8 <__sfp>
 80008ca:	2200      	movs	r2, #0
 80008cc:	2104      	movs	r1, #4
 80008ce:	60e0      	str	r0, [r4, #12]
 80008d0:	6860      	ldr	r0, [r4, #4]
 80008d2:	f7ff ff81 	bl	80007d8 <std>
 80008d6:	2201      	movs	r2, #1
 80008d8:	2109      	movs	r1, #9
 80008da:	68a0      	ldr	r0, [r4, #8]
 80008dc:	f7ff ff7c 	bl	80007d8 <std>
 80008e0:	2202      	movs	r2, #2
 80008e2:	2112      	movs	r1, #18
 80008e4:	68e0      	ldr	r0, [r4, #12]
 80008e6:	f7ff ff77 	bl	80007d8 <std>
 80008ea:	2301      	movs	r3, #1
 80008ec:	61a3      	str	r3, [r4, #24]
 80008ee:	e7d1      	b.n	8000894 <__sinit+0xc>
 80008f0:	08000df8 	.word	0x08000df8
 80008f4:	08000821 	.word	0x08000821

080008f8 <__sfp>:
 80008f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008fa:	4607      	mov	r7, r0
 80008fc:	f7ff ffac 	bl	8000858 <__sfp_lock_acquire>
 8000900:	4b1e      	ldr	r3, [pc, #120]	; (800097c <__sfp+0x84>)
 8000902:	681e      	ldr	r6, [r3, #0]
 8000904:	69b3      	ldr	r3, [r6, #24]
 8000906:	b913      	cbnz	r3, 800090e <__sfp+0x16>
 8000908:	4630      	mov	r0, r6
 800090a:	f7ff ffbd 	bl	8000888 <__sinit>
 800090e:	3648      	adds	r6, #72	; 0x48
 8000910:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000914:	3b01      	subs	r3, #1
 8000916:	d503      	bpl.n	8000920 <__sfp+0x28>
 8000918:	6833      	ldr	r3, [r6, #0]
 800091a:	b30b      	cbz	r3, 8000960 <__sfp+0x68>
 800091c:	6836      	ldr	r6, [r6, #0]
 800091e:	e7f7      	b.n	8000910 <__sfp+0x18>
 8000920:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000924:	b9d5      	cbnz	r5, 800095c <__sfp+0x64>
 8000926:	4b16      	ldr	r3, [pc, #88]	; (8000980 <__sfp+0x88>)
 8000928:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800092c:	60e3      	str	r3, [r4, #12]
 800092e:	6665      	str	r5, [r4, #100]	; 0x64
 8000930:	f000 f847 	bl	80009c2 <__retarget_lock_init_recursive>
 8000934:	f7ff ff96 	bl	8000864 <__sfp_lock_release>
 8000938:	2208      	movs	r2, #8
 800093a:	4629      	mov	r1, r5
 800093c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000940:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000944:	6025      	str	r5, [r4, #0]
 8000946:	61a5      	str	r5, [r4, #24]
 8000948:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800094c:	f7ff fd44 	bl	80003d8 <memset>
 8000950:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000954:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000958:	4620      	mov	r0, r4
 800095a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800095c:	3468      	adds	r4, #104	; 0x68
 800095e:	e7d9      	b.n	8000914 <__sfp+0x1c>
 8000960:	2104      	movs	r1, #4
 8000962:	4638      	mov	r0, r7
 8000964:	f7ff ff62 	bl	800082c <__sfmoreglue>
 8000968:	4604      	mov	r4, r0
 800096a:	6030      	str	r0, [r6, #0]
 800096c:	2800      	cmp	r0, #0
 800096e:	d1d5      	bne.n	800091c <__sfp+0x24>
 8000970:	f7ff ff78 	bl	8000864 <__sfp_lock_release>
 8000974:	230c      	movs	r3, #12
 8000976:	603b      	str	r3, [r7, #0]
 8000978:	e7ee      	b.n	8000958 <__sfp+0x60>
 800097a:	bf00      	nop
 800097c:	08000df8 	.word	0x08000df8
 8000980:	ffff0001 	.word	0xffff0001

08000984 <_fwalk_reent>:
 8000984:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000988:	4606      	mov	r6, r0
 800098a:	4688      	mov	r8, r1
 800098c:	2700      	movs	r7, #0
 800098e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000992:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000996:	f1b9 0901 	subs.w	r9, r9, #1
 800099a:	d505      	bpl.n	80009a8 <_fwalk_reent+0x24>
 800099c:	6824      	ldr	r4, [r4, #0]
 800099e:	2c00      	cmp	r4, #0
 80009a0:	d1f7      	bne.n	8000992 <_fwalk_reent+0xe>
 80009a2:	4638      	mov	r0, r7
 80009a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009a8:	89ab      	ldrh	r3, [r5, #12]
 80009aa:	2b01      	cmp	r3, #1
 80009ac:	d907      	bls.n	80009be <_fwalk_reent+0x3a>
 80009ae:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009b2:	3301      	adds	r3, #1
 80009b4:	d003      	beq.n	80009be <_fwalk_reent+0x3a>
 80009b6:	4629      	mov	r1, r5
 80009b8:	4630      	mov	r0, r6
 80009ba:	47c0      	blx	r8
 80009bc:	4307      	orrs	r7, r0
 80009be:	3568      	adds	r5, #104	; 0x68
 80009c0:	e7e9      	b.n	8000996 <_fwalk_reent+0x12>

080009c2 <__retarget_lock_init_recursive>:
 80009c2:	4770      	bx	lr

080009c4 <__retarget_lock_acquire_recursive>:
 80009c4:	4770      	bx	lr

080009c6 <__retarget_lock_release_recursive>:
 80009c6:	4770      	bx	lr

080009c8 <__swhatbuf_r>:
 80009c8:	b570      	push	{r4, r5, r6, lr}
 80009ca:	460e      	mov	r6, r1
 80009cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009d0:	4614      	mov	r4, r2
 80009d2:	2900      	cmp	r1, #0
 80009d4:	461d      	mov	r5, r3
 80009d6:	b096      	sub	sp, #88	; 0x58
 80009d8:	da07      	bge.n	80009ea <__swhatbuf_r+0x22>
 80009da:	2300      	movs	r3, #0
 80009dc:	602b      	str	r3, [r5, #0]
 80009de:	89b3      	ldrh	r3, [r6, #12]
 80009e0:	061a      	lsls	r2, r3, #24
 80009e2:	d410      	bmi.n	8000a06 <__swhatbuf_r+0x3e>
 80009e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009e8:	e00e      	b.n	8000a08 <__swhatbuf_r+0x40>
 80009ea:	466a      	mov	r2, sp
 80009ec:	f000 f96c 	bl	8000cc8 <_fstat_r>
 80009f0:	2800      	cmp	r0, #0
 80009f2:	dbf2      	blt.n	80009da <__swhatbuf_r+0x12>
 80009f4:	9a01      	ldr	r2, [sp, #4]
 80009f6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009fa:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009fe:	425a      	negs	r2, r3
 8000a00:	415a      	adcs	r2, r3
 8000a02:	602a      	str	r2, [r5, #0]
 8000a04:	e7ee      	b.n	80009e4 <__swhatbuf_r+0x1c>
 8000a06:	2340      	movs	r3, #64	; 0x40
 8000a08:	2000      	movs	r0, #0
 8000a0a:	6023      	str	r3, [r4, #0]
 8000a0c:	b016      	add	sp, #88	; 0x58
 8000a0e:	bd70      	pop	{r4, r5, r6, pc}

08000a10 <__smakebuf_r>:
 8000a10:	898b      	ldrh	r3, [r1, #12]
 8000a12:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a14:	079d      	lsls	r5, r3, #30
 8000a16:	4606      	mov	r6, r0
 8000a18:	460c      	mov	r4, r1
 8000a1a:	d507      	bpl.n	8000a2c <__smakebuf_r+0x1c>
 8000a1c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a20:	6023      	str	r3, [r4, #0]
 8000a22:	6123      	str	r3, [r4, #16]
 8000a24:	2301      	movs	r3, #1
 8000a26:	6163      	str	r3, [r4, #20]
 8000a28:	b002      	add	sp, #8
 8000a2a:	bd70      	pop	{r4, r5, r6, pc}
 8000a2c:	466a      	mov	r2, sp
 8000a2e:	ab01      	add	r3, sp, #4
 8000a30:	f7ff ffca 	bl	80009c8 <__swhatbuf_r>
 8000a34:	9900      	ldr	r1, [sp, #0]
 8000a36:	4605      	mov	r5, r0
 8000a38:	4630      	mov	r0, r6
 8000a3a:	f000 f875 	bl	8000b28 <_malloc_r>
 8000a3e:	b948      	cbnz	r0, 8000a54 <__smakebuf_r+0x44>
 8000a40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a44:	059a      	lsls	r2, r3, #22
 8000a46:	d4ef      	bmi.n	8000a28 <__smakebuf_r+0x18>
 8000a48:	f023 0303 	bic.w	r3, r3, #3
 8000a4c:	f043 0302 	orr.w	r3, r3, #2
 8000a50:	81a3      	strh	r3, [r4, #12]
 8000a52:	e7e3      	b.n	8000a1c <__smakebuf_r+0xc>
 8000a54:	4b0d      	ldr	r3, [pc, #52]	; (8000a8c <__smakebuf_r+0x7c>)
 8000a56:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a58:	89a3      	ldrh	r3, [r4, #12]
 8000a5a:	6020      	str	r0, [r4, #0]
 8000a5c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a60:	81a3      	strh	r3, [r4, #12]
 8000a62:	9b00      	ldr	r3, [sp, #0]
 8000a64:	6120      	str	r0, [r4, #16]
 8000a66:	6163      	str	r3, [r4, #20]
 8000a68:	9b01      	ldr	r3, [sp, #4]
 8000a6a:	b15b      	cbz	r3, 8000a84 <__smakebuf_r+0x74>
 8000a6c:	4630      	mov	r0, r6
 8000a6e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a72:	f000 f93b 	bl	8000cec <_isatty_r>
 8000a76:	b128      	cbz	r0, 8000a84 <__smakebuf_r+0x74>
 8000a78:	89a3      	ldrh	r3, [r4, #12]
 8000a7a:	f023 0303 	bic.w	r3, r3, #3
 8000a7e:	f043 0301 	orr.w	r3, r3, #1
 8000a82:	81a3      	strh	r3, [r4, #12]
 8000a84:	89a0      	ldrh	r0, [r4, #12]
 8000a86:	4305      	orrs	r5, r0
 8000a88:	81a5      	strh	r5, [r4, #12]
 8000a8a:	e7cd      	b.n	8000a28 <__smakebuf_r+0x18>
 8000a8c:	08000821 	.word	0x08000821

08000a90 <_free_r>:
 8000a90:	b538      	push	{r3, r4, r5, lr}
 8000a92:	4605      	mov	r5, r0
 8000a94:	2900      	cmp	r1, #0
 8000a96:	d043      	beq.n	8000b20 <_free_r+0x90>
 8000a98:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a9c:	1f0c      	subs	r4, r1, #4
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	bfb8      	it	lt
 8000aa2:	18e4      	addlt	r4, r4, r3
 8000aa4:	f000 f944 	bl	8000d30 <__malloc_lock>
 8000aa8:	4a1e      	ldr	r2, [pc, #120]	; (8000b24 <_free_r+0x94>)
 8000aaa:	6813      	ldr	r3, [r2, #0]
 8000aac:	4610      	mov	r0, r2
 8000aae:	b933      	cbnz	r3, 8000abe <_free_r+0x2e>
 8000ab0:	6063      	str	r3, [r4, #4]
 8000ab2:	6014      	str	r4, [r2, #0]
 8000ab4:	4628      	mov	r0, r5
 8000ab6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000aba:	f000 b93f 	b.w	8000d3c <__malloc_unlock>
 8000abe:	42a3      	cmp	r3, r4
 8000ac0:	d90a      	bls.n	8000ad8 <_free_r+0x48>
 8000ac2:	6821      	ldr	r1, [r4, #0]
 8000ac4:	1862      	adds	r2, r4, r1
 8000ac6:	4293      	cmp	r3, r2
 8000ac8:	bf01      	itttt	eq
 8000aca:	681a      	ldreq	r2, [r3, #0]
 8000acc:	685b      	ldreq	r3, [r3, #4]
 8000ace:	1852      	addeq	r2, r2, r1
 8000ad0:	6022      	streq	r2, [r4, #0]
 8000ad2:	6063      	str	r3, [r4, #4]
 8000ad4:	6004      	str	r4, [r0, #0]
 8000ad6:	e7ed      	b.n	8000ab4 <_free_r+0x24>
 8000ad8:	461a      	mov	r2, r3
 8000ada:	685b      	ldr	r3, [r3, #4]
 8000adc:	b10b      	cbz	r3, 8000ae2 <_free_r+0x52>
 8000ade:	42a3      	cmp	r3, r4
 8000ae0:	d9fa      	bls.n	8000ad8 <_free_r+0x48>
 8000ae2:	6811      	ldr	r1, [r2, #0]
 8000ae4:	1850      	adds	r0, r2, r1
 8000ae6:	42a0      	cmp	r0, r4
 8000ae8:	d10b      	bne.n	8000b02 <_free_r+0x72>
 8000aea:	6820      	ldr	r0, [r4, #0]
 8000aec:	4401      	add	r1, r0
 8000aee:	1850      	adds	r0, r2, r1
 8000af0:	4283      	cmp	r3, r0
 8000af2:	6011      	str	r1, [r2, #0]
 8000af4:	d1de      	bne.n	8000ab4 <_free_r+0x24>
 8000af6:	6818      	ldr	r0, [r3, #0]
 8000af8:	685b      	ldr	r3, [r3, #4]
 8000afa:	4401      	add	r1, r0
 8000afc:	6011      	str	r1, [r2, #0]
 8000afe:	6053      	str	r3, [r2, #4]
 8000b00:	e7d8      	b.n	8000ab4 <_free_r+0x24>
 8000b02:	d902      	bls.n	8000b0a <_free_r+0x7a>
 8000b04:	230c      	movs	r3, #12
 8000b06:	602b      	str	r3, [r5, #0]
 8000b08:	e7d4      	b.n	8000ab4 <_free_r+0x24>
 8000b0a:	6820      	ldr	r0, [r4, #0]
 8000b0c:	1821      	adds	r1, r4, r0
 8000b0e:	428b      	cmp	r3, r1
 8000b10:	bf01      	itttt	eq
 8000b12:	6819      	ldreq	r1, [r3, #0]
 8000b14:	685b      	ldreq	r3, [r3, #4]
 8000b16:	1809      	addeq	r1, r1, r0
 8000b18:	6021      	streq	r1, [r4, #0]
 8000b1a:	6063      	str	r3, [r4, #4]
 8000b1c:	6054      	str	r4, [r2, #4]
 8000b1e:	e7c9      	b.n	8000ab4 <_free_r+0x24>
 8000b20:	bd38      	pop	{r3, r4, r5, pc}
 8000b22:	bf00      	nop
 8000b24:	20000084 	.word	0x20000084

08000b28 <_malloc_r>:
 8000b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b2a:	1ccd      	adds	r5, r1, #3
 8000b2c:	f025 0503 	bic.w	r5, r5, #3
 8000b30:	3508      	adds	r5, #8
 8000b32:	2d0c      	cmp	r5, #12
 8000b34:	bf38      	it	cc
 8000b36:	250c      	movcc	r5, #12
 8000b38:	2d00      	cmp	r5, #0
 8000b3a:	4606      	mov	r6, r0
 8000b3c:	db01      	blt.n	8000b42 <_malloc_r+0x1a>
 8000b3e:	42a9      	cmp	r1, r5
 8000b40:	d903      	bls.n	8000b4a <_malloc_r+0x22>
 8000b42:	230c      	movs	r3, #12
 8000b44:	6033      	str	r3, [r6, #0]
 8000b46:	2000      	movs	r0, #0
 8000b48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b4a:	f000 f8f1 	bl	8000d30 <__malloc_lock>
 8000b4e:	4921      	ldr	r1, [pc, #132]	; (8000bd4 <_malloc_r+0xac>)
 8000b50:	680a      	ldr	r2, [r1, #0]
 8000b52:	4614      	mov	r4, r2
 8000b54:	b99c      	cbnz	r4, 8000b7e <_malloc_r+0x56>
 8000b56:	4f20      	ldr	r7, [pc, #128]	; (8000bd8 <_malloc_r+0xb0>)
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	b923      	cbnz	r3, 8000b66 <_malloc_r+0x3e>
 8000b5c:	4621      	mov	r1, r4
 8000b5e:	4630      	mov	r0, r6
 8000b60:	f000 f83c 	bl	8000bdc <_sbrk_r>
 8000b64:	6038      	str	r0, [r7, #0]
 8000b66:	4629      	mov	r1, r5
 8000b68:	4630      	mov	r0, r6
 8000b6a:	f000 f837 	bl	8000bdc <_sbrk_r>
 8000b6e:	1c43      	adds	r3, r0, #1
 8000b70:	d123      	bne.n	8000bba <_malloc_r+0x92>
 8000b72:	230c      	movs	r3, #12
 8000b74:	4630      	mov	r0, r6
 8000b76:	6033      	str	r3, [r6, #0]
 8000b78:	f000 f8e0 	bl	8000d3c <__malloc_unlock>
 8000b7c:	e7e3      	b.n	8000b46 <_malloc_r+0x1e>
 8000b7e:	6823      	ldr	r3, [r4, #0]
 8000b80:	1b5b      	subs	r3, r3, r5
 8000b82:	d417      	bmi.n	8000bb4 <_malloc_r+0x8c>
 8000b84:	2b0b      	cmp	r3, #11
 8000b86:	d903      	bls.n	8000b90 <_malloc_r+0x68>
 8000b88:	6023      	str	r3, [r4, #0]
 8000b8a:	441c      	add	r4, r3
 8000b8c:	6025      	str	r5, [r4, #0]
 8000b8e:	e004      	b.n	8000b9a <_malloc_r+0x72>
 8000b90:	6863      	ldr	r3, [r4, #4]
 8000b92:	42a2      	cmp	r2, r4
 8000b94:	bf0c      	ite	eq
 8000b96:	600b      	streq	r3, [r1, #0]
 8000b98:	6053      	strne	r3, [r2, #4]
 8000b9a:	4630      	mov	r0, r6
 8000b9c:	f000 f8ce 	bl	8000d3c <__malloc_unlock>
 8000ba0:	f104 000b 	add.w	r0, r4, #11
 8000ba4:	1d23      	adds	r3, r4, #4
 8000ba6:	f020 0007 	bic.w	r0, r0, #7
 8000baa:	1ac2      	subs	r2, r0, r3
 8000bac:	d0cc      	beq.n	8000b48 <_malloc_r+0x20>
 8000bae:	1a1b      	subs	r3, r3, r0
 8000bb0:	50a3      	str	r3, [r4, r2]
 8000bb2:	e7c9      	b.n	8000b48 <_malloc_r+0x20>
 8000bb4:	4622      	mov	r2, r4
 8000bb6:	6864      	ldr	r4, [r4, #4]
 8000bb8:	e7cc      	b.n	8000b54 <_malloc_r+0x2c>
 8000bba:	1cc4      	adds	r4, r0, #3
 8000bbc:	f024 0403 	bic.w	r4, r4, #3
 8000bc0:	42a0      	cmp	r0, r4
 8000bc2:	d0e3      	beq.n	8000b8c <_malloc_r+0x64>
 8000bc4:	1a21      	subs	r1, r4, r0
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	f000 f808 	bl	8000bdc <_sbrk_r>
 8000bcc:	3001      	adds	r0, #1
 8000bce:	d1dd      	bne.n	8000b8c <_malloc_r+0x64>
 8000bd0:	e7cf      	b.n	8000b72 <_malloc_r+0x4a>
 8000bd2:	bf00      	nop
 8000bd4:	20000084 	.word	0x20000084
 8000bd8:	20000088 	.word	0x20000088

08000bdc <_sbrk_r>:
 8000bdc:	b538      	push	{r3, r4, r5, lr}
 8000bde:	2300      	movs	r3, #0
 8000be0:	4d05      	ldr	r5, [pc, #20]	; (8000bf8 <_sbrk_r+0x1c>)
 8000be2:	4604      	mov	r4, r0
 8000be4:	4608      	mov	r0, r1
 8000be6:	602b      	str	r3, [r5, #0]
 8000be8:	f7ff fb6c 	bl	80002c4 <_sbrk>
 8000bec:	1c43      	adds	r3, r0, #1
 8000bee:	d102      	bne.n	8000bf6 <_sbrk_r+0x1a>
 8000bf0:	682b      	ldr	r3, [r5, #0]
 8000bf2:	b103      	cbz	r3, 8000bf6 <_sbrk_r+0x1a>
 8000bf4:	6023      	str	r3, [r4, #0]
 8000bf6:	bd38      	pop	{r3, r4, r5, pc}
 8000bf8:	20000098 	.word	0x20000098

08000bfc <__sread>:
 8000bfc:	b510      	push	{r4, lr}
 8000bfe:	460c      	mov	r4, r1
 8000c00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c04:	f000 f8a0 	bl	8000d48 <_read_r>
 8000c08:	2800      	cmp	r0, #0
 8000c0a:	bfab      	itete	ge
 8000c0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c0e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c10:	181b      	addge	r3, r3, r0
 8000c12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c16:	bfac      	ite	ge
 8000c18:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c1a:	81a3      	strhlt	r3, [r4, #12]
 8000c1c:	bd10      	pop	{r4, pc}

08000c1e <__swrite>:
 8000c1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c22:	461f      	mov	r7, r3
 8000c24:	898b      	ldrh	r3, [r1, #12]
 8000c26:	4605      	mov	r5, r0
 8000c28:	05db      	lsls	r3, r3, #23
 8000c2a:	460c      	mov	r4, r1
 8000c2c:	4616      	mov	r6, r2
 8000c2e:	d505      	bpl.n	8000c3c <__swrite+0x1e>
 8000c30:	2302      	movs	r3, #2
 8000c32:	2200      	movs	r2, #0
 8000c34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c38:	f000 f868 	bl	8000d0c <_lseek_r>
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	4632      	mov	r2, r6
 8000c40:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c44:	81a3      	strh	r3, [r4, #12]
 8000c46:	4628      	mov	r0, r5
 8000c48:	463b      	mov	r3, r7
 8000c4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c52:	f000 b817 	b.w	8000c84 <_write_r>

08000c56 <__sseek>:
 8000c56:	b510      	push	{r4, lr}
 8000c58:	460c      	mov	r4, r1
 8000c5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c5e:	f000 f855 	bl	8000d0c <_lseek_r>
 8000c62:	1c43      	adds	r3, r0, #1
 8000c64:	89a3      	ldrh	r3, [r4, #12]
 8000c66:	bf15      	itete	ne
 8000c68:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c6a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c6e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c72:	81a3      	strheq	r3, [r4, #12]
 8000c74:	bf18      	it	ne
 8000c76:	81a3      	strhne	r3, [r4, #12]
 8000c78:	bd10      	pop	{r4, pc}

08000c7a <__sclose>:
 8000c7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c7e:	f000 b813 	b.w	8000ca8 <_close_r>
	...

08000c84 <_write_r>:
 8000c84:	b538      	push	{r3, r4, r5, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	4608      	mov	r0, r1
 8000c8a:	4611      	mov	r1, r2
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	4d05      	ldr	r5, [pc, #20]	; (8000ca4 <_write_r+0x20>)
 8000c90:	602a      	str	r2, [r5, #0]
 8000c92:	461a      	mov	r2, r3
 8000c94:	f7ff fac9 	bl	800022a <_write>
 8000c98:	1c43      	adds	r3, r0, #1
 8000c9a:	d102      	bne.n	8000ca2 <_write_r+0x1e>
 8000c9c:	682b      	ldr	r3, [r5, #0]
 8000c9e:	b103      	cbz	r3, 8000ca2 <_write_r+0x1e>
 8000ca0:	6023      	str	r3, [r4, #0]
 8000ca2:	bd38      	pop	{r3, r4, r5, pc}
 8000ca4:	20000098 	.word	0x20000098

08000ca8 <_close_r>:
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	2300      	movs	r3, #0
 8000cac:	4d05      	ldr	r5, [pc, #20]	; (8000cc4 <_close_r+0x1c>)
 8000cae:	4604      	mov	r4, r0
 8000cb0:	4608      	mov	r0, r1
 8000cb2:	602b      	str	r3, [r5, #0]
 8000cb4:	f7ff fad5 	bl	8000262 <_close>
 8000cb8:	1c43      	adds	r3, r0, #1
 8000cba:	d102      	bne.n	8000cc2 <_close_r+0x1a>
 8000cbc:	682b      	ldr	r3, [r5, #0]
 8000cbe:	b103      	cbz	r3, 8000cc2 <_close_r+0x1a>
 8000cc0:	6023      	str	r3, [r4, #0]
 8000cc2:	bd38      	pop	{r3, r4, r5, pc}
 8000cc4:	20000098 	.word	0x20000098

08000cc8 <_fstat_r>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2300      	movs	r3, #0
 8000ccc:	4d06      	ldr	r5, [pc, #24]	; (8000ce8 <_fstat_r+0x20>)
 8000cce:	4604      	mov	r4, r0
 8000cd0:	4608      	mov	r0, r1
 8000cd2:	4611      	mov	r1, r2
 8000cd4:	602b      	str	r3, [r5, #0]
 8000cd6:	f7ff facf 	bl	8000278 <_fstat>
 8000cda:	1c43      	adds	r3, r0, #1
 8000cdc:	d102      	bne.n	8000ce4 <_fstat_r+0x1c>
 8000cde:	682b      	ldr	r3, [r5, #0]
 8000ce0:	b103      	cbz	r3, 8000ce4 <_fstat_r+0x1c>
 8000ce2:	6023      	str	r3, [r4, #0]
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop
 8000ce8:	20000098 	.word	0x20000098

08000cec <_isatty_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	2300      	movs	r3, #0
 8000cf0:	4d05      	ldr	r5, [pc, #20]	; (8000d08 <_isatty_r+0x1c>)
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	4608      	mov	r0, r1
 8000cf6:	602b      	str	r3, [r5, #0]
 8000cf8:	f7ff facd 	bl	8000296 <_isatty>
 8000cfc:	1c43      	adds	r3, r0, #1
 8000cfe:	d102      	bne.n	8000d06 <_isatty_r+0x1a>
 8000d00:	682b      	ldr	r3, [r5, #0]
 8000d02:	b103      	cbz	r3, 8000d06 <_isatty_r+0x1a>
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	bd38      	pop	{r3, r4, r5, pc}
 8000d08:	20000098 	.word	0x20000098

08000d0c <_lseek_r>:
 8000d0c:	b538      	push	{r3, r4, r5, lr}
 8000d0e:	4604      	mov	r4, r0
 8000d10:	4608      	mov	r0, r1
 8000d12:	4611      	mov	r1, r2
 8000d14:	2200      	movs	r2, #0
 8000d16:	4d05      	ldr	r5, [pc, #20]	; (8000d2c <_lseek_r+0x20>)
 8000d18:	602a      	str	r2, [r5, #0]
 8000d1a:	461a      	mov	r2, r3
 8000d1c:	f7ff fac5 	bl	80002aa <_lseek>
 8000d20:	1c43      	adds	r3, r0, #1
 8000d22:	d102      	bne.n	8000d2a <_lseek_r+0x1e>
 8000d24:	682b      	ldr	r3, [r5, #0]
 8000d26:	b103      	cbz	r3, 8000d2a <_lseek_r+0x1e>
 8000d28:	6023      	str	r3, [r4, #0]
 8000d2a:	bd38      	pop	{r3, r4, r5, pc}
 8000d2c:	20000098 	.word	0x20000098

08000d30 <__malloc_lock>:
 8000d30:	4801      	ldr	r0, [pc, #4]	; (8000d38 <__malloc_lock+0x8>)
 8000d32:	f7ff be47 	b.w	80009c4 <__retarget_lock_acquire_recursive>
 8000d36:	bf00      	nop
 8000d38:	20000090 	.word	0x20000090

08000d3c <__malloc_unlock>:
 8000d3c:	4801      	ldr	r0, [pc, #4]	; (8000d44 <__malloc_unlock+0x8>)
 8000d3e:	f7ff be42 	b.w	80009c6 <__retarget_lock_release_recursive>
 8000d42:	bf00      	nop
 8000d44:	20000090 	.word	0x20000090

08000d48 <_read_r>:
 8000d48:	b538      	push	{r3, r4, r5, lr}
 8000d4a:	4604      	mov	r4, r0
 8000d4c:	4608      	mov	r0, r1
 8000d4e:	4611      	mov	r1, r2
 8000d50:	2200      	movs	r2, #0
 8000d52:	4d05      	ldr	r5, [pc, #20]	; (8000d68 <_read_r+0x20>)
 8000d54:	602a      	str	r2, [r5, #0]
 8000d56:	461a      	mov	r2, r3
 8000d58:	f7ff fa4a 	bl	80001f0 <_read>
 8000d5c:	1c43      	adds	r3, r0, #1
 8000d5e:	d102      	bne.n	8000d66 <_read_r+0x1e>
 8000d60:	682b      	ldr	r3, [r5, #0]
 8000d62:	b103      	cbz	r3, 8000d66 <_read_r+0x1e>
 8000d64:	6023      	str	r3, [r4, #0]
 8000d66:	bd38      	pop	{r3, r4, r5, pc}
 8000d68:	20000098 	.word	0x20000098

08000d6c <_init>:
 8000d6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d6e:	bf00      	nop
 8000d70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d72:	bc08      	pop	{r3}
 8000d74:	469e      	mov	lr, r3
 8000d76:	4770      	bx	lr

08000d78 <_fini>:
 8000d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d7a:	bf00      	nop
 8000d7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d7e:	bc08      	pop	{r3}
 8000d80:	469e      	mov	lr, r3
 8000d82:	4770      	bx	lr
