
Operation_modes.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c28  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08000d58  08000d58  00010d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e1c  08000e1c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e1c  08000e1c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e1c  08000e1c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e1c  08000e1c  00010e1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e20  08000e20  00010e20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e24  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000e88  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000e88  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000238f  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000630  00000000  00000000  0002241c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00022a50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  00022b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bde  00000000  00000000  00022c58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013c3  00000000  00000000  00025836  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009666  00000000  00000000  00026bf9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0003025f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a18  00000000  00000000  000302b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08000d40 	.word	0x08000d40

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08000d40 	.word	0x08000d40

08000170 <generate_interrupt>:
#include<stdio.h>
#include<stdint.h>

/* This function executes in THREAD MODE of the processor */
void generate_interrupt()
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	uint32_t *pSTIR  = (uint32_t*)0xE000EF00;
 8000176:	4b09      	ldr	r3, [pc, #36]	; (800019c <generate_interrupt+0x2c>)
 8000178:	607b      	str	r3, [r7, #4]
	uint32_t *pISER0 = (uint32_t*)0xE000E100;
 800017a:	4b09      	ldr	r3, [pc, #36]	; (80001a0 <generate_interrupt+0x30>)
 800017c:	603b      	str	r3, [r7, #0]

	//enable IRQ3 interrupt
	*pISER0 |= ( 1 << 3);
 800017e:	683b      	ldr	r3, [r7, #0]
 8000180:	681b      	ldr	r3, [r3, #0]
 8000182:	f043 0208 	orr.w	r2, r3, #8
 8000186:	683b      	ldr	r3, [r7, #0]
 8000188:	601a      	str	r2, [r3, #0]

	//generate an interrupt from software for IRQ3
	*pSTIR = (3 & 0x1FF);
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	2203      	movs	r2, #3
 800018e:	601a      	str	r2, [r3, #0]

}
 8000190:	bf00      	nop
 8000192:	370c      	adds	r7, #12
 8000194:	46bd      	mov	sp, r7
 8000196:	bc80      	pop	{r7}
 8000198:	4770      	bx	lr
 800019a:	bf00      	nop
 800019c:	e000ef00 	.word	0xe000ef00
 80001a0:	e000e100 	.word	0xe000e100

080001a4 <main>:

/* This function executes in THREAD MODE of the processor */
int main(void)
{
 80001a4:	b580      	push	{r7, lr}
 80001a6:	af00      	add	r7, sp, #0
	printf("In thread mode : before interrupt\n");
 80001a8:	4804      	ldr	r0, [pc, #16]	; (80001bc <main+0x18>)
 80001aa:	f000 f975 	bl	8000498 <puts>

	generate_interrupt();
 80001ae:	f7ff ffdf 	bl	8000170 <generate_interrupt>

	printf("In thread mode : after interrupt\n");
 80001b2:	4803      	ldr	r0, [pc, #12]	; (80001c0 <main+0x1c>)
 80001b4:	f000 f970 	bl	8000498 <puts>

	for(;;);
 80001b8:	e7fe      	b.n	80001b8 <main+0x14>
 80001ba:	bf00      	nop
 80001bc:	08000d58 	.word	0x08000d58
 80001c0:	08000d7c 	.word	0x08000d7c

080001c4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001c4:	b580      	push	{r7, lr}
 80001c6:	b086      	sub	sp, #24
 80001c8:	af00      	add	r7, sp, #0
 80001ca:	60f8      	str	r0, [r7, #12]
 80001cc:	60b9      	str	r1, [r7, #8]
 80001ce:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001d0:	2300      	movs	r3, #0
 80001d2:	617b      	str	r3, [r7, #20]
 80001d4:	e00a      	b.n	80001ec <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80001d6:	f3af 8000 	nop.w
 80001da:	4601      	mov	r1, r0
 80001dc:	68bb      	ldr	r3, [r7, #8]
 80001de:	1c5a      	adds	r2, r3, #1
 80001e0:	60ba      	str	r2, [r7, #8]
 80001e2:	b2ca      	uxtb	r2, r1
 80001e4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001e6:	697b      	ldr	r3, [r7, #20]
 80001e8:	3301      	adds	r3, #1
 80001ea:	617b      	str	r3, [r7, #20]
 80001ec:	697a      	ldr	r2, [r7, #20]
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	429a      	cmp	r2, r3
 80001f2:	dbf0      	blt.n	80001d6 <_read+0x12>
	}

return len;
 80001f4:	687b      	ldr	r3, [r7, #4]
}
 80001f6:	4618      	mov	r0, r3
 80001f8:	3718      	adds	r7, #24
 80001fa:	46bd      	mov	sp, r7
 80001fc:	bd80      	pop	{r7, pc}

080001fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001fe:	b580      	push	{r7, lr}
 8000200:	b086      	sub	sp, #24
 8000202:	af00      	add	r7, sp, #0
 8000204:	60f8      	str	r0, [r7, #12]
 8000206:	60b9      	str	r1, [r7, #8]
 8000208:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800020a:	2300      	movs	r3, #0
 800020c:	617b      	str	r3, [r7, #20]
 800020e:	e009      	b.n	8000224 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000210:	68bb      	ldr	r3, [r7, #8]
 8000212:	1c5a      	adds	r2, r3, #1
 8000214:	60ba      	str	r2, [r7, #8]
 8000216:	781b      	ldrb	r3, [r3, #0]
 8000218:	4618      	mov	r0, r3
 800021a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800021e:	697b      	ldr	r3, [r7, #20]
 8000220:	3301      	adds	r3, #1
 8000222:	617b      	str	r3, [r7, #20]
 8000224:	697a      	ldr	r2, [r7, #20]
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	429a      	cmp	r2, r3
 800022a:	dbf1      	blt.n	8000210 <_write+0x12>
	}
	return len;
 800022c:	687b      	ldr	r3, [r7, #4]
}
 800022e:	4618      	mov	r0, r3
 8000230:	3718      	adds	r7, #24
 8000232:	46bd      	mov	sp, r7
 8000234:	bd80      	pop	{r7, pc}

08000236 <_close>:

int _close(int file)
{
 8000236:	b480      	push	{r7}
 8000238:	b083      	sub	sp, #12
 800023a:	af00      	add	r7, sp, #0
 800023c:	6078      	str	r0, [r7, #4]
	return -1;
 800023e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000242:	4618      	mov	r0, r3
 8000244:	370c      	adds	r7, #12
 8000246:	46bd      	mov	sp, r7
 8000248:	bc80      	pop	{r7}
 800024a:	4770      	bx	lr

0800024c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800024c:	b480      	push	{r7}
 800024e:	b083      	sub	sp, #12
 8000250:	af00      	add	r7, sp, #0
 8000252:	6078      	str	r0, [r7, #4]
 8000254:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000256:	683b      	ldr	r3, [r7, #0]
 8000258:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800025c:	605a      	str	r2, [r3, #4]
	return 0;
 800025e:	2300      	movs	r3, #0
}
 8000260:	4618      	mov	r0, r3
 8000262:	370c      	adds	r7, #12
 8000264:	46bd      	mov	sp, r7
 8000266:	bc80      	pop	{r7}
 8000268:	4770      	bx	lr

0800026a <_isatty>:

int _isatty(int file)
{
 800026a:	b480      	push	{r7}
 800026c:	b083      	sub	sp, #12
 800026e:	af00      	add	r7, sp, #0
 8000270:	6078      	str	r0, [r7, #4]
	return 1;
 8000272:	2301      	movs	r3, #1
}
 8000274:	4618      	mov	r0, r3
 8000276:	370c      	adds	r7, #12
 8000278:	46bd      	mov	sp, r7
 800027a:	bc80      	pop	{r7}
 800027c:	4770      	bx	lr

0800027e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800027e:	b480      	push	{r7}
 8000280:	b085      	sub	sp, #20
 8000282:	af00      	add	r7, sp, #0
 8000284:	60f8      	str	r0, [r7, #12]
 8000286:	60b9      	str	r1, [r7, #8]
 8000288:	607a      	str	r2, [r7, #4]
	return 0;
 800028a:	2300      	movs	r3, #0
}
 800028c:	4618      	mov	r0, r3
 800028e:	3714      	adds	r7, #20
 8000290:	46bd      	mov	sp, r7
 8000292:	bc80      	pop	{r7}
 8000294:	4770      	bx	lr
	...

08000298 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	b086      	sub	sp, #24
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002a0:	4a14      	ldr	r2, [pc, #80]	; (80002f4 <_sbrk+0x5c>)
 80002a2:	4b15      	ldr	r3, [pc, #84]	; (80002f8 <_sbrk+0x60>)
 80002a4:	1ad3      	subs	r3, r2, r3
 80002a6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002a8:	697b      	ldr	r3, [r7, #20]
 80002aa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002ac:	4b13      	ldr	r3, [pc, #76]	; (80002fc <_sbrk+0x64>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	2b00      	cmp	r3, #0
 80002b2:	d102      	bne.n	80002ba <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002b4:	4b11      	ldr	r3, [pc, #68]	; (80002fc <_sbrk+0x64>)
 80002b6:	4a12      	ldr	r2, [pc, #72]	; (8000300 <_sbrk+0x68>)
 80002b8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002ba:	4b10      	ldr	r3, [pc, #64]	; (80002fc <_sbrk+0x64>)
 80002bc:	681a      	ldr	r2, [r3, #0]
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4413      	add	r3, r2
 80002c2:	693a      	ldr	r2, [r7, #16]
 80002c4:	429a      	cmp	r2, r3
 80002c6:	d207      	bcs.n	80002d8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002c8:	f000 f846 	bl	8000358 <__errno>
 80002cc:	4603      	mov	r3, r0
 80002ce:	220c      	movs	r2, #12
 80002d0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002d2:	f04f 33ff 	mov.w	r3, #4294967295
 80002d6:	e009      	b.n	80002ec <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002d8:	4b08      	ldr	r3, [pc, #32]	; (80002fc <_sbrk+0x64>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002de:	4b07      	ldr	r3, [pc, #28]	; (80002fc <_sbrk+0x64>)
 80002e0:	681a      	ldr	r2, [r3, #0]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4413      	add	r3, r2
 80002e6:	4a05      	ldr	r2, [pc, #20]	; (80002fc <_sbrk+0x64>)
 80002e8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002ea:	68fb      	ldr	r3, [r7, #12]
}
 80002ec:	4618      	mov	r0, r3
 80002ee:	3718      	adds	r7, #24
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bd80      	pop	{r7, pc}
 80002f4:	20005000 	.word	0x20005000
 80002f8:	00000400 	.word	0x00000400
 80002fc:	20000080 	.word	0x20000080
 8000300:	200000a0 	.word	0x200000a0

08000304 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000304:	480d      	ldr	r0, [pc, #52]	; (800033c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000306:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000308:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800030c:	480c      	ldr	r0, [pc, #48]	; (8000340 <LoopForever+0x6>)
  ldr r1, =_edata
 800030e:	490d      	ldr	r1, [pc, #52]	; (8000344 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000310:	4a0d      	ldr	r2, [pc, #52]	; (8000348 <LoopForever+0xe>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000314:	e002      	b.n	800031c <LoopCopyDataInit>

08000316 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000316:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000318:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031a:	3304      	adds	r3, #4

0800031c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800031c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000320:	d3f9      	bcc.n	8000316 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000322:	4a0a      	ldr	r2, [pc, #40]	; (800034c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000324:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <LoopForever+0x16>)
  movs r3, #0
 8000326:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000328:	e001      	b.n	800032e <LoopFillZerobss>

0800032a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800032c:	3204      	adds	r2, #4

0800032e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000330:	d3fb      	bcc.n	800032a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000332:	f000 f817 	bl	8000364 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000336:	f7ff ff35 	bl	80001a4 <main>

0800033a <LoopForever>:

LoopForever:
    b LoopForever
 800033a:	e7fe      	b.n	800033a <LoopForever>
  ldr   r0, =_estack
 800033c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000340:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000344:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000348:	08000e24 	.word	0x08000e24
  ldr r2, =_sbss
 800034c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000350:	2000009c 	.word	0x2000009c

08000354 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000354:	e7fe      	b.n	8000354 <ADC1_2_IRQHandler>
	...

08000358 <__errno>:
 8000358:	4b01      	ldr	r3, [pc, #4]	; (8000360 <__errno+0x8>)
 800035a:	6818      	ldr	r0, [r3, #0]
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop
 8000360:	20000000 	.word	0x20000000

08000364 <__libc_init_array>:
 8000364:	b570      	push	{r4, r5, r6, lr}
 8000366:	2600      	movs	r6, #0
 8000368:	4d0c      	ldr	r5, [pc, #48]	; (800039c <__libc_init_array+0x38>)
 800036a:	4c0d      	ldr	r4, [pc, #52]	; (80003a0 <__libc_init_array+0x3c>)
 800036c:	1b64      	subs	r4, r4, r5
 800036e:	10a4      	asrs	r4, r4, #2
 8000370:	42a6      	cmp	r6, r4
 8000372:	d109      	bne.n	8000388 <__libc_init_array+0x24>
 8000374:	f000 fce4 	bl	8000d40 <_init>
 8000378:	2600      	movs	r6, #0
 800037a:	4d0a      	ldr	r5, [pc, #40]	; (80003a4 <__libc_init_array+0x40>)
 800037c:	4c0a      	ldr	r4, [pc, #40]	; (80003a8 <__libc_init_array+0x44>)
 800037e:	1b64      	subs	r4, r4, r5
 8000380:	10a4      	asrs	r4, r4, #2
 8000382:	42a6      	cmp	r6, r4
 8000384:	d105      	bne.n	8000392 <__libc_init_array+0x2e>
 8000386:	bd70      	pop	{r4, r5, r6, pc}
 8000388:	f855 3b04 	ldr.w	r3, [r5], #4
 800038c:	4798      	blx	r3
 800038e:	3601      	adds	r6, #1
 8000390:	e7ee      	b.n	8000370 <__libc_init_array+0xc>
 8000392:	f855 3b04 	ldr.w	r3, [r5], #4
 8000396:	4798      	blx	r3
 8000398:	3601      	adds	r6, #1
 800039a:	e7f2      	b.n	8000382 <__libc_init_array+0x1e>
 800039c:	08000e1c 	.word	0x08000e1c
 80003a0:	08000e1c 	.word	0x08000e1c
 80003a4:	08000e1c 	.word	0x08000e1c
 80003a8:	08000e20 	.word	0x08000e20

080003ac <memset>:
 80003ac:	4603      	mov	r3, r0
 80003ae:	4402      	add	r2, r0
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d100      	bne.n	80003b6 <memset+0xa>
 80003b4:	4770      	bx	lr
 80003b6:	f803 1b01 	strb.w	r1, [r3], #1
 80003ba:	e7f9      	b.n	80003b0 <memset+0x4>

080003bc <_puts_r>:
 80003bc:	b570      	push	{r4, r5, r6, lr}
 80003be:	460e      	mov	r6, r1
 80003c0:	4605      	mov	r5, r0
 80003c2:	b118      	cbz	r0, 80003cc <_puts_r+0x10>
 80003c4:	6983      	ldr	r3, [r0, #24]
 80003c6:	b90b      	cbnz	r3, 80003cc <_puts_r+0x10>
 80003c8:	f000 fa48 	bl	800085c <__sinit>
 80003cc:	69ab      	ldr	r3, [r5, #24]
 80003ce:	68ac      	ldr	r4, [r5, #8]
 80003d0:	b913      	cbnz	r3, 80003d8 <_puts_r+0x1c>
 80003d2:	4628      	mov	r0, r5
 80003d4:	f000 fa42 	bl	800085c <__sinit>
 80003d8:	4b2c      	ldr	r3, [pc, #176]	; (800048c <_puts_r+0xd0>)
 80003da:	429c      	cmp	r4, r3
 80003dc:	d120      	bne.n	8000420 <_puts_r+0x64>
 80003de:	686c      	ldr	r4, [r5, #4]
 80003e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003e2:	07db      	lsls	r3, r3, #31
 80003e4:	d405      	bmi.n	80003f2 <_puts_r+0x36>
 80003e6:	89a3      	ldrh	r3, [r4, #12]
 80003e8:	0598      	lsls	r0, r3, #22
 80003ea:	d402      	bmi.n	80003f2 <_puts_r+0x36>
 80003ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003ee:	f000 fad3 	bl	8000998 <__retarget_lock_acquire_recursive>
 80003f2:	89a3      	ldrh	r3, [r4, #12]
 80003f4:	0719      	lsls	r1, r3, #28
 80003f6:	d51d      	bpl.n	8000434 <_puts_r+0x78>
 80003f8:	6923      	ldr	r3, [r4, #16]
 80003fa:	b1db      	cbz	r3, 8000434 <_puts_r+0x78>
 80003fc:	3e01      	subs	r6, #1
 80003fe:	68a3      	ldr	r3, [r4, #8]
 8000400:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000404:	3b01      	subs	r3, #1
 8000406:	60a3      	str	r3, [r4, #8]
 8000408:	bb39      	cbnz	r1, 800045a <_puts_r+0x9e>
 800040a:	2b00      	cmp	r3, #0
 800040c:	da38      	bge.n	8000480 <_puts_r+0xc4>
 800040e:	4622      	mov	r2, r4
 8000410:	210a      	movs	r1, #10
 8000412:	4628      	mov	r0, r5
 8000414:	f000 f848 	bl	80004a8 <__swbuf_r>
 8000418:	3001      	adds	r0, #1
 800041a:	d011      	beq.n	8000440 <_puts_r+0x84>
 800041c:	250a      	movs	r5, #10
 800041e:	e011      	b.n	8000444 <_puts_r+0x88>
 8000420:	4b1b      	ldr	r3, [pc, #108]	; (8000490 <_puts_r+0xd4>)
 8000422:	429c      	cmp	r4, r3
 8000424:	d101      	bne.n	800042a <_puts_r+0x6e>
 8000426:	68ac      	ldr	r4, [r5, #8]
 8000428:	e7da      	b.n	80003e0 <_puts_r+0x24>
 800042a:	4b1a      	ldr	r3, [pc, #104]	; (8000494 <_puts_r+0xd8>)
 800042c:	429c      	cmp	r4, r3
 800042e:	bf08      	it	eq
 8000430:	68ec      	ldreq	r4, [r5, #12]
 8000432:	e7d5      	b.n	80003e0 <_puts_r+0x24>
 8000434:	4621      	mov	r1, r4
 8000436:	4628      	mov	r0, r5
 8000438:	f000 f888 	bl	800054c <__swsetup_r>
 800043c:	2800      	cmp	r0, #0
 800043e:	d0dd      	beq.n	80003fc <_puts_r+0x40>
 8000440:	f04f 35ff 	mov.w	r5, #4294967295
 8000444:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000446:	07da      	lsls	r2, r3, #31
 8000448:	d405      	bmi.n	8000456 <_puts_r+0x9a>
 800044a:	89a3      	ldrh	r3, [r4, #12]
 800044c:	059b      	lsls	r3, r3, #22
 800044e:	d402      	bmi.n	8000456 <_puts_r+0x9a>
 8000450:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000452:	f000 faa2 	bl	800099a <__retarget_lock_release_recursive>
 8000456:	4628      	mov	r0, r5
 8000458:	bd70      	pop	{r4, r5, r6, pc}
 800045a:	2b00      	cmp	r3, #0
 800045c:	da04      	bge.n	8000468 <_puts_r+0xac>
 800045e:	69a2      	ldr	r2, [r4, #24]
 8000460:	429a      	cmp	r2, r3
 8000462:	dc06      	bgt.n	8000472 <_puts_r+0xb6>
 8000464:	290a      	cmp	r1, #10
 8000466:	d004      	beq.n	8000472 <_puts_r+0xb6>
 8000468:	6823      	ldr	r3, [r4, #0]
 800046a:	1c5a      	adds	r2, r3, #1
 800046c:	6022      	str	r2, [r4, #0]
 800046e:	7019      	strb	r1, [r3, #0]
 8000470:	e7c5      	b.n	80003fe <_puts_r+0x42>
 8000472:	4622      	mov	r2, r4
 8000474:	4628      	mov	r0, r5
 8000476:	f000 f817 	bl	80004a8 <__swbuf_r>
 800047a:	3001      	adds	r0, #1
 800047c:	d1bf      	bne.n	80003fe <_puts_r+0x42>
 800047e:	e7df      	b.n	8000440 <_puts_r+0x84>
 8000480:	250a      	movs	r5, #10
 8000482:	6823      	ldr	r3, [r4, #0]
 8000484:	1c5a      	adds	r2, r3, #1
 8000486:	6022      	str	r2, [r4, #0]
 8000488:	701d      	strb	r5, [r3, #0]
 800048a:	e7db      	b.n	8000444 <_puts_r+0x88>
 800048c:	08000ddc 	.word	0x08000ddc
 8000490:	08000dfc 	.word	0x08000dfc
 8000494:	08000dbc 	.word	0x08000dbc

08000498 <puts>:
 8000498:	4b02      	ldr	r3, [pc, #8]	; (80004a4 <puts+0xc>)
 800049a:	4601      	mov	r1, r0
 800049c:	6818      	ldr	r0, [r3, #0]
 800049e:	f7ff bf8d 	b.w	80003bc <_puts_r>
 80004a2:	bf00      	nop
 80004a4:	20000000 	.word	0x20000000

080004a8 <__swbuf_r>:
 80004a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004aa:	460e      	mov	r6, r1
 80004ac:	4614      	mov	r4, r2
 80004ae:	4605      	mov	r5, r0
 80004b0:	b118      	cbz	r0, 80004ba <__swbuf_r+0x12>
 80004b2:	6983      	ldr	r3, [r0, #24]
 80004b4:	b90b      	cbnz	r3, 80004ba <__swbuf_r+0x12>
 80004b6:	f000 f9d1 	bl	800085c <__sinit>
 80004ba:	4b21      	ldr	r3, [pc, #132]	; (8000540 <__swbuf_r+0x98>)
 80004bc:	429c      	cmp	r4, r3
 80004be:	d12b      	bne.n	8000518 <__swbuf_r+0x70>
 80004c0:	686c      	ldr	r4, [r5, #4]
 80004c2:	69a3      	ldr	r3, [r4, #24]
 80004c4:	60a3      	str	r3, [r4, #8]
 80004c6:	89a3      	ldrh	r3, [r4, #12]
 80004c8:	071a      	lsls	r2, r3, #28
 80004ca:	d52f      	bpl.n	800052c <__swbuf_r+0x84>
 80004cc:	6923      	ldr	r3, [r4, #16]
 80004ce:	b36b      	cbz	r3, 800052c <__swbuf_r+0x84>
 80004d0:	6923      	ldr	r3, [r4, #16]
 80004d2:	6820      	ldr	r0, [r4, #0]
 80004d4:	b2f6      	uxtb	r6, r6
 80004d6:	1ac0      	subs	r0, r0, r3
 80004d8:	6963      	ldr	r3, [r4, #20]
 80004da:	4637      	mov	r7, r6
 80004dc:	4283      	cmp	r3, r0
 80004de:	dc04      	bgt.n	80004ea <__swbuf_r+0x42>
 80004e0:	4621      	mov	r1, r4
 80004e2:	4628      	mov	r0, r5
 80004e4:	f000 f926 	bl	8000734 <_fflush_r>
 80004e8:	bb30      	cbnz	r0, 8000538 <__swbuf_r+0x90>
 80004ea:	68a3      	ldr	r3, [r4, #8]
 80004ec:	3001      	adds	r0, #1
 80004ee:	3b01      	subs	r3, #1
 80004f0:	60a3      	str	r3, [r4, #8]
 80004f2:	6823      	ldr	r3, [r4, #0]
 80004f4:	1c5a      	adds	r2, r3, #1
 80004f6:	6022      	str	r2, [r4, #0]
 80004f8:	701e      	strb	r6, [r3, #0]
 80004fa:	6963      	ldr	r3, [r4, #20]
 80004fc:	4283      	cmp	r3, r0
 80004fe:	d004      	beq.n	800050a <__swbuf_r+0x62>
 8000500:	89a3      	ldrh	r3, [r4, #12]
 8000502:	07db      	lsls	r3, r3, #31
 8000504:	d506      	bpl.n	8000514 <__swbuf_r+0x6c>
 8000506:	2e0a      	cmp	r6, #10
 8000508:	d104      	bne.n	8000514 <__swbuf_r+0x6c>
 800050a:	4621      	mov	r1, r4
 800050c:	4628      	mov	r0, r5
 800050e:	f000 f911 	bl	8000734 <_fflush_r>
 8000512:	b988      	cbnz	r0, 8000538 <__swbuf_r+0x90>
 8000514:	4638      	mov	r0, r7
 8000516:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000518:	4b0a      	ldr	r3, [pc, #40]	; (8000544 <__swbuf_r+0x9c>)
 800051a:	429c      	cmp	r4, r3
 800051c:	d101      	bne.n	8000522 <__swbuf_r+0x7a>
 800051e:	68ac      	ldr	r4, [r5, #8]
 8000520:	e7cf      	b.n	80004c2 <__swbuf_r+0x1a>
 8000522:	4b09      	ldr	r3, [pc, #36]	; (8000548 <__swbuf_r+0xa0>)
 8000524:	429c      	cmp	r4, r3
 8000526:	bf08      	it	eq
 8000528:	68ec      	ldreq	r4, [r5, #12]
 800052a:	e7ca      	b.n	80004c2 <__swbuf_r+0x1a>
 800052c:	4621      	mov	r1, r4
 800052e:	4628      	mov	r0, r5
 8000530:	f000 f80c 	bl	800054c <__swsetup_r>
 8000534:	2800      	cmp	r0, #0
 8000536:	d0cb      	beq.n	80004d0 <__swbuf_r+0x28>
 8000538:	f04f 37ff 	mov.w	r7, #4294967295
 800053c:	e7ea      	b.n	8000514 <__swbuf_r+0x6c>
 800053e:	bf00      	nop
 8000540:	08000ddc 	.word	0x08000ddc
 8000544:	08000dfc 	.word	0x08000dfc
 8000548:	08000dbc 	.word	0x08000dbc

0800054c <__swsetup_r>:
 800054c:	4b32      	ldr	r3, [pc, #200]	; (8000618 <__swsetup_r+0xcc>)
 800054e:	b570      	push	{r4, r5, r6, lr}
 8000550:	681d      	ldr	r5, [r3, #0]
 8000552:	4606      	mov	r6, r0
 8000554:	460c      	mov	r4, r1
 8000556:	b125      	cbz	r5, 8000562 <__swsetup_r+0x16>
 8000558:	69ab      	ldr	r3, [r5, #24]
 800055a:	b913      	cbnz	r3, 8000562 <__swsetup_r+0x16>
 800055c:	4628      	mov	r0, r5
 800055e:	f000 f97d 	bl	800085c <__sinit>
 8000562:	4b2e      	ldr	r3, [pc, #184]	; (800061c <__swsetup_r+0xd0>)
 8000564:	429c      	cmp	r4, r3
 8000566:	d10f      	bne.n	8000588 <__swsetup_r+0x3c>
 8000568:	686c      	ldr	r4, [r5, #4]
 800056a:	89a3      	ldrh	r3, [r4, #12]
 800056c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000570:	0719      	lsls	r1, r3, #28
 8000572:	d42c      	bmi.n	80005ce <__swsetup_r+0x82>
 8000574:	06dd      	lsls	r5, r3, #27
 8000576:	d411      	bmi.n	800059c <__swsetup_r+0x50>
 8000578:	2309      	movs	r3, #9
 800057a:	6033      	str	r3, [r6, #0]
 800057c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000580:	f04f 30ff 	mov.w	r0, #4294967295
 8000584:	81a3      	strh	r3, [r4, #12]
 8000586:	e03e      	b.n	8000606 <__swsetup_r+0xba>
 8000588:	4b25      	ldr	r3, [pc, #148]	; (8000620 <__swsetup_r+0xd4>)
 800058a:	429c      	cmp	r4, r3
 800058c:	d101      	bne.n	8000592 <__swsetup_r+0x46>
 800058e:	68ac      	ldr	r4, [r5, #8]
 8000590:	e7eb      	b.n	800056a <__swsetup_r+0x1e>
 8000592:	4b24      	ldr	r3, [pc, #144]	; (8000624 <__swsetup_r+0xd8>)
 8000594:	429c      	cmp	r4, r3
 8000596:	bf08      	it	eq
 8000598:	68ec      	ldreq	r4, [r5, #12]
 800059a:	e7e6      	b.n	800056a <__swsetup_r+0x1e>
 800059c:	0758      	lsls	r0, r3, #29
 800059e:	d512      	bpl.n	80005c6 <__swsetup_r+0x7a>
 80005a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005a2:	b141      	cbz	r1, 80005b6 <__swsetup_r+0x6a>
 80005a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005a8:	4299      	cmp	r1, r3
 80005aa:	d002      	beq.n	80005b2 <__swsetup_r+0x66>
 80005ac:	4630      	mov	r0, r6
 80005ae:	f000 fa59 	bl	8000a64 <_free_r>
 80005b2:	2300      	movs	r3, #0
 80005b4:	6363      	str	r3, [r4, #52]	; 0x34
 80005b6:	89a3      	ldrh	r3, [r4, #12]
 80005b8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80005bc:	81a3      	strh	r3, [r4, #12]
 80005be:	2300      	movs	r3, #0
 80005c0:	6063      	str	r3, [r4, #4]
 80005c2:	6923      	ldr	r3, [r4, #16]
 80005c4:	6023      	str	r3, [r4, #0]
 80005c6:	89a3      	ldrh	r3, [r4, #12]
 80005c8:	f043 0308 	orr.w	r3, r3, #8
 80005cc:	81a3      	strh	r3, [r4, #12]
 80005ce:	6923      	ldr	r3, [r4, #16]
 80005d0:	b94b      	cbnz	r3, 80005e6 <__swsetup_r+0x9a>
 80005d2:	89a3      	ldrh	r3, [r4, #12]
 80005d4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80005d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80005dc:	d003      	beq.n	80005e6 <__swsetup_r+0x9a>
 80005de:	4621      	mov	r1, r4
 80005e0:	4630      	mov	r0, r6
 80005e2:	f000 f9ff 	bl	80009e4 <__smakebuf_r>
 80005e6:	89a0      	ldrh	r0, [r4, #12]
 80005e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005ec:	f010 0301 	ands.w	r3, r0, #1
 80005f0:	d00a      	beq.n	8000608 <__swsetup_r+0xbc>
 80005f2:	2300      	movs	r3, #0
 80005f4:	60a3      	str	r3, [r4, #8]
 80005f6:	6963      	ldr	r3, [r4, #20]
 80005f8:	425b      	negs	r3, r3
 80005fa:	61a3      	str	r3, [r4, #24]
 80005fc:	6923      	ldr	r3, [r4, #16]
 80005fe:	b943      	cbnz	r3, 8000612 <__swsetup_r+0xc6>
 8000600:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000604:	d1ba      	bne.n	800057c <__swsetup_r+0x30>
 8000606:	bd70      	pop	{r4, r5, r6, pc}
 8000608:	0781      	lsls	r1, r0, #30
 800060a:	bf58      	it	pl
 800060c:	6963      	ldrpl	r3, [r4, #20]
 800060e:	60a3      	str	r3, [r4, #8]
 8000610:	e7f4      	b.n	80005fc <__swsetup_r+0xb0>
 8000612:	2000      	movs	r0, #0
 8000614:	e7f7      	b.n	8000606 <__swsetup_r+0xba>
 8000616:	bf00      	nop
 8000618:	20000000 	.word	0x20000000
 800061c:	08000ddc 	.word	0x08000ddc
 8000620:	08000dfc 	.word	0x08000dfc
 8000624:	08000dbc 	.word	0x08000dbc

08000628 <__sflush_r>:
 8000628:	898a      	ldrh	r2, [r1, #12]
 800062a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800062e:	4605      	mov	r5, r0
 8000630:	0710      	lsls	r0, r2, #28
 8000632:	460c      	mov	r4, r1
 8000634:	d458      	bmi.n	80006e8 <__sflush_r+0xc0>
 8000636:	684b      	ldr	r3, [r1, #4]
 8000638:	2b00      	cmp	r3, #0
 800063a:	dc05      	bgt.n	8000648 <__sflush_r+0x20>
 800063c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800063e:	2b00      	cmp	r3, #0
 8000640:	dc02      	bgt.n	8000648 <__sflush_r+0x20>
 8000642:	2000      	movs	r0, #0
 8000644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000648:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800064a:	2e00      	cmp	r6, #0
 800064c:	d0f9      	beq.n	8000642 <__sflush_r+0x1a>
 800064e:	2300      	movs	r3, #0
 8000650:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000654:	682f      	ldr	r7, [r5, #0]
 8000656:	602b      	str	r3, [r5, #0]
 8000658:	d032      	beq.n	80006c0 <__sflush_r+0x98>
 800065a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800065c:	89a3      	ldrh	r3, [r4, #12]
 800065e:	075a      	lsls	r2, r3, #29
 8000660:	d505      	bpl.n	800066e <__sflush_r+0x46>
 8000662:	6863      	ldr	r3, [r4, #4]
 8000664:	1ac0      	subs	r0, r0, r3
 8000666:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000668:	b10b      	cbz	r3, 800066e <__sflush_r+0x46>
 800066a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800066c:	1ac0      	subs	r0, r0, r3
 800066e:	2300      	movs	r3, #0
 8000670:	4602      	mov	r2, r0
 8000672:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000674:	4628      	mov	r0, r5
 8000676:	6a21      	ldr	r1, [r4, #32]
 8000678:	47b0      	blx	r6
 800067a:	1c43      	adds	r3, r0, #1
 800067c:	89a3      	ldrh	r3, [r4, #12]
 800067e:	d106      	bne.n	800068e <__sflush_r+0x66>
 8000680:	6829      	ldr	r1, [r5, #0]
 8000682:	291d      	cmp	r1, #29
 8000684:	d82c      	bhi.n	80006e0 <__sflush_r+0xb8>
 8000686:	4a2a      	ldr	r2, [pc, #168]	; (8000730 <__sflush_r+0x108>)
 8000688:	40ca      	lsrs	r2, r1
 800068a:	07d6      	lsls	r6, r2, #31
 800068c:	d528      	bpl.n	80006e0 <__sflush_r+0xb8>
 800068e:	2200      	movs	r2, #0
 8000690:	6062      	str	r2, [r4, #4]
 8000692:	6922      	ldr	r2, [r4, #16]
 8000694:	04d9      	lsls	r1, r3, #19
 8000696:	6022      	str	r2, [r4, #0]
 8000698:	d504      	bpl.n	80006a4 <__sflush_r+0x7c>
 800069a:	1c42      	adds	r2, r0, #1
 800069c:	d101      	bne.n	80006a2 <__sflush_r+0x7a>
 800069e:	682b      	ldr	r3, [r5, #0]
 80006a0:	b903      	cbnz	r3, 80006a4 <__sflush_r+0x7c>
 80006a2:	6560      	str	r0, [r4, #84]	; 0x54
 80006a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006a6:	602f      	str	r7, [r5, #0]
 80006a8:	2900      	cmp	r1, #0
 80006aa:	d0ca      	beq.n	8000642 <__sflush_r+0x1a>
 80006ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006b0:	4299      	cmp	r1, r3
 80006b2:	d002      	beq.n	80006ba <__sflush_r+0x92>
 80006b4:	4628      	mov	r0, r5
 80006b6:	f000 f9d5 	bl	8000a64 <_free_r>
 80006ba:	2000      	movs	r0, #0
 80006bc:	6360      	str	r0, [r4, #52]	; 0x34
 80006be:	e7c1      	b.n	8000644 <__sflush_r+0x1c>
 80006c0:	6a21      	ldr	r1, [r4, #32]
 80006c2:	2301      	movs	r3, #1
 80006c4:	4628      	mov	r0, r5
 80006c6:	47b0      	blx	r6
 80006c8:	1c41      	adds	r1, r0, #1
 80006ca:	d1c7      	bne.n	800065c <__sflush_r+0x34>
 80006cc:	682b      	ldr	r3, [r5, #0]
 80006ce:	2b00      	cmp	r3, #0
 80006d0:	d0c4      	beq.n	800065c <__sflush_r+0x34>
 80006d2:	2b1d      	cmp	r3, #29
 80006d4:	d001      	beq.n	80006da <__sflush_r+0xb2>
 80006d6:	2b16      	cmp	r3, #22
 80006d8:	d101      	bne.n	80006de <__sflush_r+0xb6>
 80006da:	602f      	str	r7, [r5, #0]
 80006dc:	e7b1      	b.n	8000642 <__sflush_r+0x1a>
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006e4:	81a3      	strh	r3, [r4, #12]
 80006e6:	e7ad      	b.n	8000644 <__sflush_r+0x1c>
 80006e8:	690f      	ldr	r7, [r1, #16]
 80006ea:	2f00      	cmp	r7, #0
 80006ec:	d0a9      	beq.n	8000642 <__sflush_r+0x1a>
 80006ee:	0793      	lsls	r3, r2, #30
 80006f0:	bf18      	it	ne
 80006f2:	2300      	movne	r3, #0
 80006f4:	680e      	ldr	r6, [r1, #0]
 80006f6:	bf08      	it	eq
 80006f8:	694b      	ldreq	r3, [r1, #20]
 80006fa:	eba6 0807 	sub.w	r8, r6, r7
 80006fe:	600f      	str	r7, [r1, #0]
 8000700:	608b      	str	r3, [r1, #8]
 8000702:	f1b8 0f00 	cmp.w	r8, #0
 8000706:	dd9c      	ble.n	8000642 <__sflush_r+0x1a>
 8000708:	4643      	mov	r3, r8
 800070a:	463a      	mov	r2, r7
 800070c:	4628      	mov	r0, r5
 800070e:	6a21      	ldr	r1, [r4, #32]
 8000710:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000712:	47b0      	blx	r6
 8000714:	2800      	cmp	r0, #0
 8000716:	dc06      	bgt.n	8000726 <__sflush_r+0xfe>
 8000718:	89a3      	ldrh	r3, [r4, #12]
 800071a:	f04f 30ff 	mov.w	r0, #4294967295
 800071e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000722:	81a3      	strh	r3, [r4, #12]
 8000724:	e78e      	b.n	8000644 <__sflush_r+0x1c>
 8000726:	4407      	add	r7, r0
 8000728:	eba8 0800 	sub.w	r8, r8, r0
 800072c:	e7e9      	b.n	8000702 <__sflush_r+0xda>
 800072e:	bf00      	nop
 8000730:	20400001 	.word	0x20400001

08000734 <_fflush_r>:
 8000734:	b538      	push	{r3, r4, r5, lr}
 8000736:	690b      	ldr	r3, [r1, #16]
 8000738:	4605      	mov	r5, r0
 800073a:	460c      	mov	r4, r1
 800073c:	b913      	cbnz	r3, 8000744 <_fflush_r+0x10>
 800073e:	2500      	movs	r5, #0
 8000740:	4628      	mov	r0, r5
 8000742:	bd38      	pop	{r3, r4, r5, pc}
 8000744:	b118      	cbz	r0, 800074e <_fflush_r+0x1a>
 8000746:	6983      	ldr	r3, [r0, #24]
 8000748:	b90b      	cbnz	r3, 800074e <_fflush_r+0x1a>
 800074a:	f000 f887 	bl	800085c <__sinit>
 800074e:	4b14      	ldr	r3, [pc, #80]	; (80007a0 <_fflush_r+0x6c>)
 8000750:	429c      	cmp	r4, r3
 8000752:	d11b      	bne.n	800078c <_fflush_r+0x58>
 8000754:	686c      	ldr	r4, [r5, #4]
 8000756:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d0ef      	beq.n	800073e <_fflush_r+0xa>
 800075e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000760:	07d0      	lsls	r0, r2, #31
 8000762:	d404      	bmi.n	800076e <_fflush_r+0x3a>
 8000764:	0599      	lsls	r1, r3, #22
 8000766:	d402      	bmi.n	800076e <_fflush_r+0x3a>
 8000768:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800076a:	f000 f915 	bl	8000998 <__retarget_lock_acquire_recursive>
 800076e:	4628      	mov	r0, r5
 8000770:	4621      	mov	r1, r4
 8000772:	f7ff ff59 	bl	8000628 <__sflush_r>
 8000776:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000778:	4605      	mov	r5, r0
 800077a:	07da      	lsls	r2, r3, #31
 800077c:	d4e0      	bmi.n	8000740 <_fflush_r+0xc>
 800077e:	89a3      	ldrh	r3, [r4, #12]
 8000780:	059b      	lsls	r3, r3, #22
 8000782:	d4dd      	bmi.n	8000740 <_fflush_r+0xc>
 8000784:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000786:	f000 f908 	bl	800099a <__retarget_lock_release_recursive>
 800078a:	e7d9      	b.n	8000740 <_fflush_r+0xc>
 800078c:	4b05      	ldr	r3, [pc, #20]	; (80007a4 <_fflush_r+0x70>)
 800078e:	429c      	cmp	r4, r3
 8000790:	d101      	bne.n	8000796 <_fflush_r+0x62>
 8000792:	68ac      	ldr	r4, [r5, #8]
 8000794:	e7df      	b.n	8000756 <_fflush_r+0x22>
 8000796:	4b04      	ldr	r3, [pc, #16]	; (80007a8 <_fflush_r+0x74>)
 8000798:	429c      	cmp	r4, r3
 800079a:	bf08      	it	eq
 800079c:	68ec      	ldreq	r4, [r5, #12]
 800079e:	e7da      	b.n	8000756 <_fflush_r+0x22>
 80007a0:	08000ddc 	.word	0x08000ddc
 80007a4:	08000dfc 	.word	0x08000dfc
 80007a8:	08000dbc 	.word	0x08000dbc

080007ac <std>:
 80007ac:	2300      	movs	r3, #0
 80007ae:	b510      	push	{r4, lr}
 80007b0:	4604      	mov	r4, r0
 80007b2:	e9c0 3300 	strd	r3, r3, [r0]
 80007b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007ba:	6083      	str	r3, [r0, #8]
 80007bc:	8181      	strh	r1, [r0, #12]
 80007be:	6643      	str	r3, [r0, #100]	; 0x64
 80007c0:	81c2      	strh	r2, [r0, #14]
 80007c2:	6183      	str	r3, [r0, #24]
 80007c4:	4619      	mov	r1, r3
 80007c6:	2208      	movs	r2, #8
 80007c8:	305c      	adds	r0, #92	; 0x5c
 80007ca:	f7ff fdef 	bl	80003ac <memset>
 80007ce:	4b05      	ldr	r3, [pc, #20]	; (80007e4 <std+0x38>)
 80007d0:	6224      	str	r4, [r4, #32]
 80007d2:	6263      	str	r3, [r4, #36]	; 0x24
 80007d4:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <std+0x3c>)
 80007d6:	62a3      	str	r3, [r4, #40]	; 0x28
 80007d8:	4b04      	ldr	r3, [pc, #16]	; (80007ec <std+0x40>)
 80007da:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007dc:	4b04      	ldr	r3, [pc, #16]	; (80007f0 <std+0x44>)
 80007de:	6323      	str	r3, [r4, #48]	; 0x30
 80007e0:	bd10      	pop	{r4, pc}
 80007e2:	bf00      	nop
 80007e4:	08000bd1 	.word	0x08000bd1
 80007e8:	08000bf3 	.word	0x08000bf3
 80007ec:	08000c2b 	.word	0x08000c2b
 80007f0:	08000c4f 	.word	0x08000c4f

080007f4 <_cleanup_r>:
 80007f4:	4901      	ldr	r1, [pc, #4]	; (80007fc <_cleanup_r+0x8>)
 80007f6:	f000 b8af 	b.w	8000958 <_fwalk_reent>
 80007fa:	bf00      	nop
 80007fc:	08000735 	.word	0x08000735

08000800 <__sfmoreglue>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	2568      	movs	r5, #104	; 0x68
 8000804:	1e4a      	subs	r2, r1, #1
 8000806:	4355      	muls	r5, r2
 8000808:	460e      	mov	r6, r1
 800080a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800080e:	f000 f975 	bl	8000afc <_malloc_r>
 8000812:	4604      	mov	r4, r0
 8000814:	b140      	cbz	r0, 8000828 <__sfmoreglue+0x28>
 8000816:	2100      	movs	r1, #0
 8000818:	e9c0 1600 	strd	r1, r6, [r0]
 800081c:	300c      	adds	r0, #12
 800081e:	60a0      	str	r0, [r4, #8]
 8000820:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000824:	f7ff fdc2 	bl	80003ac <memset>
 8000828:	4620      	mov	r0, r4
 800082a:	bd70      	pop	{r4, r5, r6, pc}

0800082c <__sfp_lock_acquire>:
 800082c:	4801      	ldr	r0, [pc, #4]	; (8000834 <__sfp_lock_acquire+0x8>)
 800082e:	f000 b8b3 	b.w	8000998 <__retarget_lock_acquire_recursive>
 8000832:	bf00      	nop
 8000834:	20000094 	.word	0x20000094

08000838 <__sfp_lock_release>:
 8000838:	4801      	ldr	r0, [pc, #4]	; (8000840 <__sfp_lock_release+0x8>)
 800083a:	f000 b8ae 	b.w	800099a <__retarget_lock_release_recursive>
 800083e:	bf00      	nop
 8000840:	20000094 	.word	0x20000094

08000844 <__sinit_lock_acquire>:
 8000844:	4801      	ldr	r0, [pc, #4]	; (800084c <__sinit_lock_acquire+0x8>)
 8000846:	f000 b8a7 	b.w	8000998 <__retarget_lock_acquire_recursive>
 800084a:	bf00      	nop
 800084c:	2000008f 	.word	0x2000008f

08000850 <__sinit_lock_release>:
 8000850:	4801      	ldr	r0, [pc, #4]	; (8000858 <__sinit_lock_release+0x8>)
 8000852:	f000 b8a2 	b.w	800099a <__retarget_lock_release_recursive>
 8000856:	bf00      	nop
 8000858:	2000008f 	.word	0x2000008f

0800085c <__sinit>:
 800085c:	b510      	push	{r4, lr}
 800085e:	4604      	mov	r4, r0
 8000860:	f7ff fff0 	bl	8000844 <__sinit_lock_acquire>
 8000864:	69a3      	ldr	r3, [r4, #24]
 8000866:	b11b      	cbz	r3, 8000870 <__sinit+0x14>
 8000868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800086c:	f7ff bff0 	b.w	8000850 <__sinit_lock_release>
 8000870:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000874:	6523      	str	r3, [r4, #80]	; 0x50
 8000876:	4b13      	ldr	r3, [pc, #76]	; (80008c4 <__sinit+0x68>)
 8000878:	4a13      	ldr	r2, [pc, #76]	; (80008c8 <__sinit+0x6c>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	62a2      	str	r2, [r4, #40]	; 0x28
 800087e:	42a3      	cmp	r3, r4
 8000880:	bf08      	it	eq
 8000882:	2301      	moveq	r3, #1
 8000884:	4620      	mov	r0, r4
 8000886:	bf08      	it	eq
 8000888:	61a3      	streq	r3, [r4, #24]
 800088a:	f000 f81f 	bl	80008cc <__sfp>
 800088e:	6060      	str	r0, [r4, #4]
 8000890:	4620      	mov	r0, r4
 8000892:	f000 f81b 	bl	80008cc <__sfp>
 8000896:	60a0      	str	r0, [r4, #8]
 8000898:	4620      	mov	r0, r4
 800089a:	f000 f817 	bl	80008cc <__sfp>
 800089e:	2200      	movs	r2, #0
 80008a0:	2104      	movs	r1, #4
 80008a2:	60e0      	str	r0, [r4, #12]
 80008a4:	6860      	ldr	r0, [r4, #4]
 80008a6:	f7ff ff81 	bl	80007ac <std>
 80008aa:	2201      	movs	r2, #1
 80008ac:	2109      	movs	r1, #9
 80008ae:	68a0      	ldr	r0, [r4, #8]
 80008b0:	f7ff ff7c 	bl	80007ac <std>
 80008b4:	2202      	movs	r2, #2
 80008b6:	2112      	movs	r1, #18
 80008b8:	68e0      	ldr	r0, [r4, #12]
 80008ba:	f7ff ff77 	bl	80007ac <std>
 80008be:	2301      	movs	r3, #1
 80008c0:	61a3      	str	r3, [r4, #24]
 80008c2:	e7d1      	b.n	8000868 <__sinit+0xc>
 80008c4:	08000db8 	.word	0x08000db8
 80008c8:	080007f5 	.word	0x080007f5

080008cc <__sfp>:
 80008cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ce:	4607      	mov	r7, r0
 80008d0:	f7ff ffac 	bl	800082c <__sfp_lock_acquire>
 80008d4:	4b1e      	ldr	r3, [pc, #120]	; (8000950 <__sfp+0x84>)
 80008d6:	681e      	ldr	r6, [r3, #0]
 80008d8:	69b3      	ldr	r3, [r6, #24]
 80008da:	b913      	cbnz	r3, 80008e2 <__sfp+0x16>
 80008dc:	4630      	mov	r0, r6
 80008de:	f7ff ffbd 	bl	800085c <__sinit>
 80008e2:	3648      	adds	r6, #72	; 0x48
 80008e4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008e8:	3b01      	subs	r3, #1
 80008ea:	d503      	bpl.n	80008f4 <__sfp+0x28>
 80008ec:	6833      	ldr	r3, [r6, #0]
 80008ee:	b30b      	cbz	r3, 8000934 <__sfp+0x68>
 80008f0:	6836      	ldr	r6, [r6, #0]
 80008f2:	e7f7      	b.n	80008e4 <__sfp+0x18>
 80008f4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008f8:	b9d5      	cbnz	r5, 8000930 <__sfp+0x64>
 80008fa:	4b16      	ldr	r3, [pc, #88]	; (8000954 <__sfp+0x88>)
 80008fc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000900:	60e3      	str	r3, [r4, #12]
 8000902:	6665      	str	r5, [r4, #100]	; 0x64
 8000904:	f000 f847 	bl	8000996 <__retarget_lock_init_recursive>
 8000908:	f7ff ff96 	bl	8000838 <__sfp_lock_release>
 800090c:	2208      	movs	r2, #8
 800090e:	4629      	mov	r1, r5
 8000910:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000914:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000918:	6025      	str	r5, [r4, #0]
 800091a:	61a5      	str	r5, [r4, #24]
 800091c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000920:	f7ff fd44 	bl	80003ac <memset>
 8000924:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000928:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800092c:	4620      	mov	r0, r4
 800092e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000930:	3468      	adds	r4, #104	; 0x68
 8000932:	e7d9      	b.n	80008e8 <__sfp+0x1c>
 8000934:	2104      	movs	r1, #4
 8000936:	4638      	mov	r0, r7
 8000938:	f7ff ff62 	bl	8000800 <__sfmoreglue>
 800093c:	4604      	mov	r4, r0
 800093e:	6030      	str	r0, [r6, #0]
 8000940:	2800      	cmp	r0, #0
 8000942:	d1d5      	bne.n	80008f0 <__sfp+0x24>
 8000944:	f7ff ff78 	bl	8000838 <__sfp_lock_release>
 8000948:	230c      	movs	r3, #12
 800094a:	603b      	str	r3, [r7, #0]
 800094c:	e7ee      	b.n	800092c <__sfp+0x60>
 800094e:	bf00      	nop
 8000950:	08000db8 	.word	0x08000db8
 8000954:	ffff0001 	.word	0xffff0001

08000958 <_fwalk_reent>:
 8000958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800095c:	4606      	mov	r6, r0
 800095e:	4688      	mov	r8, r1
 8000960:	2700      	movs	r7, #0
 8000962:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000966:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800096a:	f1b9 0901 	subs.w	r9, r9, #1
 800096e:	d505      	bpl.n	800097c <_fwalk_reent+0x24>
 8000970:	6824      	ldr	r4, [r4, #0]
 8000972:	2c00      	cmp	r4, #0
 8000974:	d1f7      	bne.n	8000966 <_fwalk_reent+0xe>
 8000976:	4638      	mov	r0, r7
 8000978:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800097c:	89ab      	ldrh	r3, [r5, #12]
 800097e:	2b01      	cmp	r3, #1
 8000980:	d907      	bls.n	8000992 <_fwalk_reent+0x3a>
 8000982:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000986:	3301      	adds	r3, #1
 8000988:	d003      	beq.n	8000992 <_fwalk_reent+0x3a>
 800098a:	4629      	mov	r1, r5
 800098c:	4630      	mov	r0, r6
 800098e:	47c0      	blx	r8
 8000990:	4307      	orrs	r7, r0
 8000992:	3568      	adds	r5, #104	; 0x68
 8000994:	e7e9      	b.n	800096a <_fwalk_reent+0x12>

08000996 <__retarget_lock_init_recursive>:
 8000996:	4770      	bx	lr

08000998 <__retarget_lock_acquire_recursive>:
 8000998:	4770      	bx	lr

0800099a <__retarget_lock_release_recursive>:
 800099a:	4770      	bx	lr

0800099c <__swhatbuf_r>:
 800099c:	b570      	push	{r4, r5, r6, lr}
 800099e:	460e      	mov	r6, r1
 80009a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009a4:	4614      	mov	r4, r2
 80009a6:	2900      	cmp	r1, #0
 80009a8:	461d      	mov	r5, r3
 80009aa:	b096      	sub	sp, #88	; 0x58
 80009ac:	da07      	bge.n	80009be <__swhatbuf_r+0x22>
 80009ae:	2300      	movs	r3, #0
 80009b0:	602b      	str	r3, [r5, #0]
 80009b2:	89b3      	ldrh	r3, [r6, #12]
 80009b4:	061a      	lsls	r2, r3, #24
 80009b6:	d410      	bmi.n	80009da <__swhatbuf_r+0x3e>
 80009b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009bc:	e00e      	b.n	80009dc <__swhatbuf_r+0x40>
 80009be:	466a      	mov	r2, sp
 80009c0:	f000 f96c 	bl	8000c9c <_fstat_r>
 80009c4:	2800      	cmp	r0, #0
 80009c6:	dbf2      	blt.n	80009ae <__swhatbuf_r+0x12>
 80009c8:	9a01      	ldr	r2, [sp, #4]
 80009ca:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009ce:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009d2:	425a      	negs	r2, r3
 80009d4:	415a      	adcs	r2, r3
 80009d6:	602a      	str	r2, [r5, #0]
 80009d8:	e7ee      	b.n	80009b8 <__swhatbuf_r+0x1c>
 80009da:	2340      	movs	r3, #64	; 0x40
 80009dc:	2000      	movs	r0, #0
 80009de:	6023      	str	r3, [r4, #0]
 80009e0:	b016      	add	sp, #88	; 0x58
 80009e2:	bd70      	pop	{r4, r5, r6, pc}

080009e4 <__smakebuf_r>:
 80009e4:	898b      	ldrh	r3, [r1, #12]
 80009e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009e8:	079d      	lsls	r5, r3, #30
 80009ea:	4606      	mov	r6, r0
 80009ec:	460c      	mov	r4, r1
 80009ee:	d507      	bpl.n	8000a00 <__smakebuf_r+0x1c>
 80009f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009f4:	6023      	str	r3, [r4, #0]
 80009f6:	6123      	str	r3, [r4, #16]
 80009f8:	2301      	movs	r3, #1
 80009fa:	6163      	str	r3, [r4, #20]
 80009fc:	b002      	add	sp, #8
 80009fe:	bd70      	pop	{r4, r5, r6, pc}
 8000a00:	466a      	mov	r2, sp
 8000a02:	ab01      	add	r3, sp, #4
 8000a04:	f7ff ffca 	bl	800099c <__swhatbuf_r>
 8000a08:	9900      	ldr	r1, [sp, #0]
 8000a0a:	4605      	mov	r5, r0
 8000a0c:	4630      	mov	r0, r6
 8000a0e:	f000 f875 	bl	8000afc <_malloc_r>
 8000a12:	b948      	cbnz	r0, 8000a28 <__smakebuf_r+0x44>
 8000a14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a18:	059a      	lsls	r2, r3, #22
 8000a1a:	d4ef      	bmi.n	80009fc <__smakebuf_r+0x18>
 8000a1c:	f023 0303 	bic.w	r3, r3, #3
 8000a20:	f043 0302 	orr.w	r3, r3, #2
 8000a24:	81a3      	strh	r3, [r4, #12]
 8000a26:	e7e3      	b.n	80009f0 <__smakebuf_r+0xc>
 8000a28:	4b0d      	ldr	r3, [pc, #52]	; (8000a60 <__smakebuf_r+0x7c>)
 8000a2a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a2c:	89a3      	ldrh	r3, [r4, #12]
 8000a2e:	6020      	str	r0, [r4, #0]
 8000a30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a34:	81a3      	strh	r3, [r4, #12]
 8000a36:	9b00      	ldr	r3, [sp, #0]
 8000a38:	6120      	str	r0, [r4, #16]
 8000a3a:	6163      	str	r3, [r4, #20]
 8000a3c:	9b01      	ldr	r3, [sp, #4]
 8000a3e:	b15b      	cbz	r3, 8000a58 <__smakebuf_r+0x74>
 8000a40:	4630      	mov	r0, r6
 8000a42:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a46:	f000 f93b 	bl	8000cc0 <_isatty_r>
 8000a4a:	b128      	cbz	r0, 8000a58 <__smakebuf_r+0x74>
 8000a4c:	89a3      	ldrh	r3, [r4, #12]
 8000a4e:	f023 0303 	bic.w	r3, r3, #3
 8000a52:	f043 0301 	orr.w	r3, r3, #1
 8000a56:	81a3      	strh	r3, [r4, #12]
 8000a58:	89a0      	ldrh	r0, [r4, #12]
 8000a5a:	4305      	orrs	r5, r0
 8000a5c:	81a5      	strh	r5, [r4, #12]
 8000a5e:	e7cd      	b.n	80009fc <__smakebuf_r+0x18>
 8000a60:	080007f5 	.word	0x080007f5

08000a64 <_free_r>:
 8000a64:	b538      	push	{r3, r4, r5, lr}
 8000a66:	4605      	mov	r5, r0
 8000a68:	2900      	cmp	r1, #0
 8000a6a:	d043      	beq.n	8000af4 <_free_r+0x90>
 8000a6c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a70:	1f0c      	subs	r4, r1, #4
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	bfb8      	it	lt
 8000a76:	18e4      	addlt	r4, r4, r3
 8000a78:	f000 f944 	bl	8000d04 <__malloc_lock>
 8000a7c:	4a1e      	ldr	r2, [pc, #120]	; (8000af8 <_free_r+0x94>)
 8000a7e:	6813      	ldr	r3, [r2, #0]
 8000a80:	4610      	mov	r0, r2
 8000a82:	b933      	cbnz	r3, 8000a92 <_free_r+0x2e>
 8000a84:	6063      	str	r3, [r4, #4]
 8000a86:	6014      	str	r4, [r2, #0]
 8000a88:	4628      	mov	r0, r5
 8000a8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a8e:	f000 b93f 	b.w	8000d10 <__malloc_unlock>
 8000a92:	42a3      	cmp	r3, r4
 8000a94:	d90a      	bls.n	8000aac <_free_r+0x48>
 8000a96:	6821      	ldr	r1, [r4, #0]
 8000a98:	1862      	adds	r2, r4, r1
 8000a9a:	4293      	cmp	r3, r2
 8000a9c:	bf01      	itttt	eq
 8000a9e:	681a      	ldreq	r2, [r3, #0]
 8000aa0:	685b      	ldreq	r3, [r3, #4]
 8000aa2:	1852      	addeq	r2, r2, r1
 8000aa4:	6022      	streq	r2, [r4, #0]
 8000aa6:	6063      	str	r3, [r4, #4]
 8000aa8:	6004      	str	r4, [r0, #0]
 8000aaa:	e7ed      	b.n	8000a88 <_free_r+0x24>
 8000aac:	461a      	mov	r2, r3
 8000aae:	685b      	ldr	r3, [r3, #4]
 8000ab0:	b10b      	cbz	r3, 8000ab6 <_free_r+0x52>
 8000ab2:	42a3      	cmp	r3, r4
 8000ab4:	d9fa      	bls.n	8000aac <_free_r+0x48>
 8000ab6:	6811      	ldr	r1, [r2, #0]
 8000ab8:	1850      	adds	r0, r2, r1
 8000aba:	42a0      	cmp	r0, r4
 8000abc:	d10b      	bne.n	8000ad6 <_free_r+0x72>
 8000abe:	6820      	ldr	r0, [r4, #0]
 8000ac0:	4401      	add	r1, r0
 8000ac2:	1850      	adds	r0, r2, r1
 8000ac4:	4283      	cmp	r3, r0
 8000ac6:	6011      	str	r1, [r2, #0]
 8000ac8:	d1de      	bne.n	8000a88 <_free_r+0x24>
 8000aca:	6818      	ldr	r0, [r3, #0]
 8000acc:	685b      	ldr	r3, [r3, #4]
 8000ace:	4401      	add	r1, r0
 8000ad0:	6011      	str	r1, [r2, #0]
 8000ad2:	6053      	str	r3, [r2, #4]
 8000ad4:	e7d8      	b.n	8000a88 <_free_r+0x24>
 8000ad6:	d902      	bls.n	8000ade <_free_r+0x7a>
 8000ad8:	230c      	movs	r3, #12
 8000ada:	602b      	str	r3, [r5, #0]
 8000adc:	e7d4      	b.n	8000a88 <_free_r+0x24>
 8000ade:	6820      	ldr	r0, [r4, #0]
 8000ae0:	1821      	adds	r1, r4, r0
 8000ae2:	428b      	cmp	r3, r1
 8000ae4:	bf01      	itttt	eq
 8000ae6:	6819      	ldreq	r1, [r3, #0]
 8000ae8:	685b      	ldreq	r3, [r3, #4]
 8000aea:	1809      	addeq	r1, r1, r0
 8000aec:	6021      	streq	r1, [r4, #0]
 8000aee:	6063      	str	r3, [r4, #4]
 8000af0:	6054      	str	r4, [r2, #4]
 8000af2:	e7c9      	b.n	8000a88 <_free_r+0x24>
 8000af4:	bd38      	pop	{r3, r4, r5, pc}
 8000af6:	bf00      	nop
 8000af8:	20000084 	.word	0x20000084

08000afc <_malloc_r>:
 8000afc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000afe:	1ccd      	adds	r5, r1, #3
 8000b00:	f025 0503 	bic.w	r5, r5, #3
 8000b04:	3508      	adds	r5, #8
 8000b06:	2d0c      	cmp	r5, #12
 8000b08:	bf38      	it	cc
 8000b0a:	250c      	movcc	r5, #12
 8000b0c:	2d00      	cmp	r5, #0
 8000b0e:	4606      	mov	r6, r0
 8000b10:	db01      	blt.n	8000b16 <_malloc_r+0x1a>
 8000b12:	42a9      	cmp	r1, r5
 8000b14:	d903      	bls.n	8000b1e <_malloc_r+0x22>
 8000b16:	230c      	movs	r3, #12
 8000b18:	6033      	str	r3, [r6, #0]
 8000b1a:	2000      	movs	r0, #0
 8000b1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b1e:	f000 f8f1 	bl	8000d04 <__malloc_lock>
 8000b22:	4921      	ldr	r1, [pc, #132]	; (8000ba8 <_malloc_r+0xac>)
 8000b24:	680a      	ldr	r2, [r1, #0]
 8000b26:	4614      	mov	r4, r2
 8000b28:	b99c      	cbnz	r4, 8000b52 <_malloc_r+0x56>
 8000b2a:	4f20      	ldr	r7, [pc, #128]	; (8000bac <_malloc_r+0xb0>)
 8000b2c:	683b      	ldr	r3, [r7, #0]
 8000b2e:	b923      	cbnz	r3, 8000b3a <_malloc_r+0x3e>
 8000b30:	4621      	mov	r1, r4
 8000b32:	4630      	mov	r0, r6
 8000b34:	f000 f83c 	bl	8000bb0 <_sbrk_r>
 8000b38:	6038      	str	r0, [r7, #0]
 8000b3a:	4629      	mov	r1, r5
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	f000 f837 	bl	8000bb0 <_sbrk_r>
 8000b42:	1c43      	adds	r3, r0, #1
 8000b44:	d123      	bne.n	8000b8e <_malloc_r+0x92>
 8000b46:	230c      	movs	r3, #12
 8000b48:	4630      	mov	r0, r6
 8000b4a:	6033      	str	r3, [r6, #0]
 8000b4c:	f000 f8e0 	bl	8000d10 <__malloc_unlock>
 8000b50:	e7e3      	b.n	8000b1a <_malloc_r+0x1e>
 8000b52:	6823      	ldr	r3, [r4, #0]
 8000b54:	1b5b      	subs	r3, r3, r5
 8000b56:	d417      	bmi.n	8000b88 <_malloc_r+0x8c>
 8000b58:	2b0b      	cmp	r3, #11
 8000b5a:	d903      	bls.n	8000b64 <_malloc_r+0x68>
 8000b5c:	6023      	str	r3, [r4, #0]
 8000b5e:	441c      	add	r4, r3
 8000b60:	6025      	str	r5, [r4, #0]
 8000b62:	e004      	b.n	8000b6e <_malloc_r+0x72>
 8000b64:	6863      	ldr	r3, [r4, #4]
 8000b66:	42a2      	cmp	r2, r4
 8000b68:	bf0c      	ite	eq
 8000b6a:	600b      	streq	r3, [r1, #0]
 8000b6c:	6053      	strne	r3, [r2, #4]
 8000b6e:	4630      	mov	r0, r6
 8000b70:	f000 f8ce 	bl	8000d10 <__malloc_unlock>
 8000b74:	f104 000b 	add.w	r0, r4, #11
 8000b78:	1d23      	adds	r3, r4, #4
 8000b7a:	f020 0007 	bic.w	r0, r0, #7
 8000b7e:	1ac2      	subs	r2, r0, r3
 8000b80:	d0cc      	beq.n	8000b1c <_malloc_r+0x20>
 8000b82:	1a1b      	subs	r3, r3, r0
 8000b84:	50a3      	str	r3, [r4, r2]
 8000b86:	e7c9      	b.n	8000b1c <_malloc_r+0x20>
 8000b88:	4622      	mov	r2, r4
 8000b8a:	6864      	ldr	r4, [r4, #4]
 8000b8c:	e7cc      	b.n	8000b28 <_malloc_r+0x2c>
 8000b8e:	1cc4      	adds	r4, r0, #3
 8000b90:	f024 0403 	bic.w	r4, r4, #3
 8000b94:	42a0      	cmp	r0, r4
 8000b96:	d0e3      	beq.n	8000b60 <_malloc_r+0x64>
 8000b98:	1a21      	subs	r1, r4, r0
 8000b9a:	4630      	mov	r0, r6
 8000b9c:	f000 f808 	bl	8000bb0 <_sbrk_r>
 8000ba0:	3001      	adds	r0, #1
 8000ba2:	d1dd      	bne.n	8000b60 <_malloc_r+0x64>
 8000ba4:	e7cf      	b.n	8000b46 <_malloc_r+0x4a>
 8000ba6:	bf00      	nop
 8000ba8:	20000084 	.word	0x20000084
 8000bac:	20000088 	.word	0x20000088

08000bb0 <_sbrk_r>:
 8000bb0:	b538      	push	{r3, r4, r5, lr}
 8000bb2:	2300      	movs	r3, #0
 8000bb4:	4d05      	ldr	r5, [pc, #20]	; (8000bcc <_sbrk_r+0x1c>)
 8000bb6:	4604      	mov	r4, r0
 8000bb8:	4608      	mov	r0, r1
 8000bba:	602b      	str	r3, [r5, #0]
 8000bbc:	f7ff fb6c 	bl	8000298 <_sbrk>
 8000bc0:	1c43      	adds	r3, r0, #1
 8000bc2:	d102      	bne.n	8000bca <_sbrk_r+0x1a>
 8000bc4:	682b      	ldr	r3, [r5, #0]
 8000bc6:	b103      	cbz	r3, 8000bca <_sbrk_r+0x1a>
 8000bc8:	6023      	str	r3, [r4, #0]
 8000bca:	bd38      	pop	{r3, r4, r5, pc}
 8000bcc:	20000098 	.word	0x20000098

08000bd0 <__sread>:
 8000bd0:	b510      	push	{r4, lr}
 8000bd2:	460c      	mov	r4, r1
 8000bd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bd8:	f000 f8a0 	bl	8000d1c <_read_r>
 8000bdc:	2800      	cmp	r0, #0
 8000bde:	bfab      	itete	ge
 8000be0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000be2:	89a3      	ldrhlt	r3, [r4, #12]
 8000be4:	181b      	addge	r3, r3, r0
 8000be6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bea:	bfac      	ite	ge
 8000bec:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bee:	81a3      	strhlt	r3, [r4, #12]
 8000bf0:	bd10      	pop	{r4, pc}

08000bf2 <__swrite>:
 8000bf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bf6:	461f      	mov	r7, r3
 8000bf8:	898b      	ldrh	r3, [r1, #12]
 8000bfa:	4605      	mov	r5, r0
 8000bfc:	05db      	lsls	r3, r3, #23
 8000bfe:	460c      	mov	r4, r1
 8000c00:	4616      	mov	r6, r2
 8000c02:	d505      	bpl.n	8000c10 <__swrite+0x1e>
 8000c04:	2302      	movs	r3, #2
 8000c06:	2200      	movs	r2, #0
 8000c08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c0c:	f000 f868 	bl	8000ce0 <_lseek_r>
 8000c10:	89a3      	ldrh	r3, [r4, #12]
 8000c12:	4632      	mov	r2, r6
 8000c14:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c18:	81a3      	strh	r3, [r4, #12]
 8000c1a:	4628      	mov	r0, r5
 8000c1c:	463b      	mov	r3, r7
 8000c1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c26:	f000 b817 	b.w	8000c58 <_write_r>

08000c2a <__sseek>:
 8000c2a:	b510      	push	{r4, lr}
 8000c2c:	460c      	mov	r4, r1
 8000c2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c32:	f000 f855 	bl	8000ce0 <_lseek_r>
 8000c36:	1c43      	adds	r3, r0, #1
 8000c38:	89a3      	ldrh	r3, [r4, #12]
 8000c3a:	bf15      	itete	ne
 8000c3c:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c3e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c42:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c46:	81a3      	strheq	r3, [r4, #12]
 8000c48:	bf18      	it	ne
 8000c4a:	81a3      	strhne	r3, [r4, #12]
 8000c4c:	bd10      	pop	{r4, pc}

08000c4e <__sclose>:
 8000c4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c52:	f000 b813 	b.w	8000c7c <_close_r>
	...

08000c58 <_write_r>:
 8000c58:	b538      	push	{r3, r4, r5, lr}
 8000c5a:	4604      	mov	r4, r0
 8000c5c:	4608      	mov	r0, r1
 8000c5e:	4611      	mov	r1, r2
 8000c60:	2200      	movs	r2, #0
 8000c62:	4d05      	ldr	r5, [pc, #20]	; (8000c78 <_write_r+0x20>)
 8000c64:	602a      	str	r2, [r5, #0]
 8000c66:	461a      	mov	r2, r3
 8000c68:	f7ff fac9 	bl	80001fe <_write>
 8000c6c:	1c43      	adds	r3, r0, #1
 8000c6e:	d102      	bne.n	8000c76 <_write_r+0x1e>
 8000c70:	682b      	ldr	r3, [r5, #0]
 8000c72:	b103      	cbz	r3, 8000c76 <_write_r+0x1e>
 8000c74:	6023      	str	r3, [r4, #0]
 8000c76:	bd38      	pop	{r3, r4, r5, pc}
 8000c78:	20000098 	.word	0x20000098

08000c7c <_close_r>:
 8000c7c:	b538      	push	{r3, r4, r5, lr}
 8000c7e:	2300      	movs	r3, #0
 8000c80:	4d05      	ldr	r5, [pc, #20]	; (8000c98 <_close_r+0x1c>)
 8000c82:	4604      	mov	r4, r0
 8000c84:	4608      	mov	r0, r1
 8000c86:	602b      	str	r3, [r5, #0]
 8000c88:	f7ff fad5 	bl	8000236 <_close>
 8000c8c:	1c43      	adds	r3, r0, #1
 8000c8e:	d102      	bne.n	8000c96 <_close_r+0x1a>
 8000c90:	682b      	ldr	r3, [r5, #0]
 8000c92:	b103      	cbz	r3, 8000c96 <_close_r+0x1a>
 8000c94:	6023      	str	r3, [r4, #0]
 8000c96:	bd38      	pop	{r3, r4, r5, pc}
 8000c98:	20000098 	.word	0x20000098

08000c9c <_fstat_r>:
 8000c9c:	b538      	push	{r3, r4, r5, lr}
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	4d06      	ldr	r5, [pc, #24]	; (8000cbc <_fstat_r+0x20>)
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	4608      	mov	r0, r1
 8000ca6:	4611      	mov	r1, r2
 8000ca8:	602b      	str	r3, [r5, #0]
 8000caa:	f7ff facf 	bl	800024c <_fstat>
 8000cae:	1c43      	adds	r3, r0, #1
 8000cb0:	d102      	bne.n	8000cb8 <_fstat_r+0x1c>
 8000cb2:	682b      	ldr	r3, [r5, #0]
 8000cb4:	b103      	cbz	r3, 8000cb8 <_fstat_r+0x1c>
 8000cb6:	6023      	str	r3, [r4, #0]
 8000cb8:	bd38      	pop	{r3, r4, r5, pc}
 8000cba:	bf00      	nop
 8000cbc:	20000098 	.word	0x20000098

08000cc0 <_isatty_r>:
 8000cc0:	b538      	push	{r3, r4, r5, lr}
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	4d05      	ldr	r5, [pc, #20]	; (8000cdc <_isatty_r+0x1c>)
 8000cc6:	4604      	mov	r4, r0
 8000cc8:	4608      	mov	r0, r1
 8000cca:	602b      	str	r3, [r5, #0]
 8000ccc:	f7ff facd 	bl	800026a <_isatty>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d102      	bne.n	8000cda <_isatty_r+0x1a>
 8000cd4:	682b      	ldr	r3, [r5, #0]
 8000cd6:	b103      	cbz	r3, 8000cda <_isatty_r+0x1a>
 8000cd8:	6023      	str	r3, [r4, #0]
 8000cda:	bd38      	pop	{r3, r4, r5, pc}
 8000cdc:	20000098 	.word	0x20000098

08000ce0 <_lseek_r>:
 8000ce0:	b538      	push	{r3, r4, r5, lr}
 8000ce2:	4604      	mov	r4, r0
 8000ce4:	4608      	mov	r0, r1
 8000ce6:	4611      	mov	r1, r2
 8000ce8:	2200      	movs	r2, #0
 8000cea:	4d05      	ldr	r5, [pc, #20]	; (8000d00 <_lseek_r+0x20>)
 8000cec:	602a      	str	r2, [r5, #0]
 8000cee:	461a      	mov	r2, r3
 8000cf0:	f7ff fac5 	bl	800027e <_lseek>
 8000cf4:	1c43      	adds	r3, r0, #1
 8000cf6:	d102      	bne.n	8000cfe <_lseek_r+0x1e>
 8000cf8:	682b      	ldr	r3, [r5, #0]
 8000cfa:	b103      	cbz	r3, 8000cfe <_lseek_r+0x1e>
 8000cfc:	6023      	str	r3, [r4, #0]
 8000cfe:	bd38      	pop	{r3, r4, r5, pc}
 8000d00:	20000098 	.word	0x20000098

08000d04 <__malloc_lock>:
 8000d04:	4801      	ldr	r0, [pc, #4]	; (8000d0c <__malloc_lock+0x8>)
 8000d06:	f7ff be47 	b.w	8000998 <__retarget_lock_acquire_recursive>
 8000d0a:	bf00      	nop
 8000d0c:	20000090 	.word	0x20000090

08000d10 <__malloc_unlock>:
 8000d10:	4801      	ldr	r0, [pc, #4]	; (8000d18 <__malloc_unlock+0x8>)
 8000d12:	f7ff be42 	b.w	800099a <__retarget_lock_release_recursive>
 8000d16:	bf00      	nop
 8000d18:	20000090 	.word	0x20000090

08000d1c <_read_r>:
 8000d1c:	b538      	push	{r3, r4, r5, lr}
 8000d1e:	4604      	mov	r4, r0
 8000d20:	4608      	mov	r0, r1
 8000d22:	4611      	mov	r1, r2
 8000d24:	2200      	movs	r2, #0
 8000d26:	4d05      	ldr	r5, [pc, #20]	; (8000d3c <_read_r+0x20>)
 8000d28:	602a      	str	r2, [r5, #0]
 8000d2a:	461a      	mov	r2, r3
 8000d2c:	f7ff fa4a 	bl	80001c4 <_read>
 8000d30:	1c43      	adds	r3, r0, #1
 8000d32:	d102      	bne.n	8000d3a <_read_r+0x1e>
 8000d34:	682b      	ldr	r3, [r5, #0]
 8000d36:	b103      	cbz	r3, 8000d3a <_read_r+0x1e>
 8000d38:	6023      	str	r3, [r4, #0]
 8000d3a:	bd38      	pop	{r3, r4, r5, pc}
 8000d3c:	20000098 	.word	0x20000098

08000d40 <_init>:
 8000d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d42:	bf00      	nop
 8000d44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d46:	bc08      	pop	{r3}
 8000d48:	469e      	mov	lr, r3
 8000d4a:	4770      	bx	lr

08000d4c <_fini>:
 8000d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d4e:	bf00      	nop
 8000d50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d52:	bc08      	pop	{r3}
 8000d54:	469e      	mov	lr, r3
 8000d56:	4770      	bx	lr
